# English translations for GNU bash package.
# Copyright (C) 2005 Free Software Foundation, Inc.
# This file is distributed under the same license as the GNU bash package.
# Automatically generated, 2005.
#
# All this catalog "translates" are quotation characters.
# The msgids must be ASCII and therefore cannot contain real quotation
# characters, only substitutes like grave accent (0x60), apostrophe (0x27)
# and double quote (0x22). These substitutes look strange; see
# http://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html
#
# This catalog translates grave accent (0x60) and apostrophe (0x27) to
# left single quotation mark (U+2018) and right single quotation mark (U+2019).
# It also translates pairs of apostrophe (0x27) to
# left single quotation mark (U+2018) and right single quotation mark (U+2019)
# and pairs of quotation mark (0x22) to
# left double quotation mark (U+201C) and right double quotation mark (U+201D).
#
# When output to an UTF-8 terminal, the quotation characters appear perfectly.
# When output to an ISO-8859-1 terminal, the single quotation marks are
# transliterated to apostrophes (by iconv in glibc 2.2 or newer) or to
# grave/acute accent (by libiconv), and the double quotation marks are
# transliterated to 0x22.
# When output to an ASCII terminal, the single quotation marks are
# transliterated to apostrophes, and the double quotation marks are
# transliterated to 0x22.
#
# This catalog furthermore displays the text between the quotation marks in
# bold face, assuming the VT100/XTerm escape sequences.
#
msgid ""
msgstr ""
"Project-Id-Version: GNU bash 3.1-beta1\n"
"POT-Creation-Date: 2005-10-03 17:31-0400\n"
"PO-Revision-Date: 2005-10-03 17:31-0400\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: arrayfunc.c:48
msgid "bad array subscript"
msgstr "bad array subscript"

#: arrayfunc.c:360
#, c-format
msgid "%s: cannot assign to non-numeric index"
msgstr "%s: cannot assign to non-numeric index"

#: bashhist.c:328
#, c-format
msgid "%s: cannot create: %s"
msgstr "%s: cannot create: %s"

#: bashline.c:2947
msgid "bash_execute_unix_command: cannot find keymap for command"
msgstr "bash_execute_unix_command: cannot find keymap for command"

#: bashline.c:2996
#, c-format
msgid "%s: first non-whitespace character is not `\"'"
msgstr "%s: first non-whitespace character is not ‚Äò[1m\"[0m‚Äô"

#: bashline.c:3025
#, c-format
msgid "no closing `%c' in %s"
msgstr "no closing ‚Äò[1m%c[0m‚Äô in %s"

#: bashline.c:3059
#, c-format
msgid "%s: missing colon separator"
msgstr "%s: missing colon separator"

#: builtins/bind.def:194
#, c-format
msgid "`%s': invalid keymap name"
msgstr "‚Äò[1m%s[0m‚Äô: invalid keymap name"

#: builtins/bind.def:233
#, c-format
msgid "%s: cannot read: %s"
msgstr "%s: cannot read: %s"

#: builtins/bind.def:248
#, c-format
msgid "`%s': cannot unbind"
msgstr "‚Äò[1m%s[0m‚Äô: cannot unbind"

#: builtins/bind.def:283
#, c-format
msgid "`%s': unknown function name"
msgstr "‚Äò[1m%s[0m‚Äô: unknown function name"

#: builtins/bind.def:291
#, c-format
msgid "%s is not bound to any keys.\n"
msgstr "%s is not bound to any keys.\n"

#: builtins/bind.def:295
#, c-format
msgid "%s can be invoked via "
msgstr "%s can be invoked via "

#: builtins/break.def:128
msgid "only meaningful in a `for', `while', or `until' loop"
msgstr "only meaningful in a ‚Äò[1mfor[0m‚Äô, ‚Äò[1mwhile[0m‚Äô, or ‚Äò[1muntil[0m‚Äô loop"

#: builtins/caller.def:132
msgid "Returns the context of the current subroutine call."
msgstr "Returns the context of the current subroutine call."

#: builtins/caller.def:133 builtins/caller.def:137 builtins/pushd.def:660
#: builtins/pushd.def:668 builtins/pushd.def:671 builtins/pushd.def:681
#: builtins/pushd.def:685 builtins/pushd.def:689 builtins/pushd.def:692
#: builtins/pushd.def:695 builtins/pushd.def:704 builtins/pushd.def:708
#: builtins/pushd.def:712 builtins/pushd.def:715
msgid " "
msgstr " "

#: builtins/caller.def:134
msgid "Without EXPR, returns returns \"$line $filename\".  With EXPR,"
msgstr "Without EXPR, returns returns ‚Äú[1m$line $filename[0m‚Äù.  With EXPR,"

#: builtins/caller.def:135
msgid "returns \"$line $subroutine $filename\"; this extra information"
msgstr "returns ‚Äú[1m$line $subroutine $filename[0m‚Äù; this extra information"

#: builtins/caller.def:136
msgid "can be used used to provide a stack trace."
msgstr "can be used used to provide a stack trace."

#: builtins/caller.def:138
msgid "The value of EXPR indicates how many call frames to go back before the"
msgstr "The value of EXPR indicates how many call frames to go back before the"

#: builtins/caller.def:139
msgid "current one; the top frame is frame 0."
msgstr "current one; the top frame is frame 0."

#: builtins/cd.def:203
msgid "HOME not set"
msgstr "HOME not set"

#: builtins/cd.def:215
msgid "OLDPWD not set"
msgstr "OLDPWD not set"

#: builtins/common.c:133 test.c:921
msgid "too many arguments"
msgstr "too many arguments"

#: builtins/common.c:157 shell.c:474 shell.c:747
#, c-format
msgid "%s: option requires an argument"
msgstr "%s: option requires an argument"

#: builtins/common.c:164
#, c-format
msgid "%s: numeric argument required"
msgstr "%s: numeric argument required"

#: builtins/common.c:171
#, c-format
msgid "%s: not found"
msgstr "%s: not found"

#: builtins/common.c:180 shell.c:760
#, c-format
msgid "%s: invalid option"
msgstr "%s: invalid option"

#: builtins/common.c:187
#, c-format
msgid "%s: invalid option name"
msgstr "%s: invalid option name"

#: builtins/common.c:194 general.c:231 general.c:236
#, c-format
msgid "`%s': not a valid identifier"
msgstr "‚Äò[1m%s[0m‚Äô: not a valid identifier"

#: builtins/common.c:201
#, c-format
msgid "%s: invalid number"
msgstr "%s: invalid number"

#: builtins/common.c:208
#, c-format
msgid "%s: invalid signal specification"
msgstr "%s: invalid signal specification"

#: builtins/common.c:215
#, c-format
msgid "`%s': not a pid or valid job spec"
msgstr "‚Äò[1m%s[0m‚Äô: not a pid or valid job spec"

#: builtins/common.c:222 error.c:453
#, c-format
msgid "%s: readonly variable"
msgstr "%s: readonly variable"

#: builtins/common.c:230
#, c-format
msgid "%s: %s out of range"
msgstr "%s: %s out of range"

#: builtins/common.c:230 builtins/common.c:232
msgid "argument"
msgstr "argument"

#: builtins/common.c:232
#, c-format
msgid "%s out of range"
msgstr "%s out of range"

#: builtins/common.c:240
#, c-format
msgid "%s: no such job"
msgstr "%s: no such job"

#: builtins/common.c:248
#, c-format
msgid "%s: no job control"
msgstr "%s: no job control"

#: builtins/common.c:250
msgid "no job control"
msgstr "no job control"

#: builtins/common.c:260
#, c-format
msgid "%s: restricted"
msgstr "%s: restricted"

#: builtins/common.c:262
msgid "restricted"
msgstr "restricted"

#: builtins/common.c:270
#, c-format
msgid "%s: not a shell builtin"
msgstr "%s: not a shell builtin"

#: builtins/common.c:276
#, c-format
msgid "write error: %s"
msgstr "write error: %s"

#: builtins/common.c:484
#, c-format
msgid "%s: error retrieving current directory: %s: %s\n"
msgstr "%s: error retrieving current directory: %s: %s\n"

#: builtins/common.c:550 builtins/common.c:552
#, c-format
msgid "%s: ambiguous job spec"
msgstr "%s: ambiguous job spec"

#: builtins/complete.def:251
#, c-format
msgid "%s: invalid action name"
msgstr "%s: invalid action name"

#: builtins/complete.def:381 builtins/complete.def:524
#, c-format
msgid "%s: no completion specification"
msgstr "%s: no completion specification"

#: builtins/complete.def:571
msgid "warning: -F option may not work as you expect"
msgstr "warning: -F option may not work as you expect"

#: builtins/complete.def:573
msgid "warning: -C option may not work as you expect"
msgstr "warning: -C option may not work as you expect"

#: builtins/declare.def:105
msgid "can only be used in a function"
msgstr "can only be used in a function"

#: builtins/declare.def:301
msgid "cannot use `-f' to make functions"
msgstr "cannot use ‚Äò[1m-f[0m‚Äô to make functions"

#: builtins/declare.def:313 execute_cmd.c:3986
#, c-format
msgid "%s: readonly function"
msgstr "%s: readonly function"

#: builtins/declare.def:401
#, c-format
msgid "%s: cannot destroy array variables in this way"
msgstr "%s: cannot destroy array variables in this way"

#: builtins/enable.def:128 builtins/enable.def:136
msgid "dynamic loading not available"
msgstr "dynamic loading not available"

#: builtins/enable.def:303
#, c-format
msgid "cannot open shared object %s: %s"
msgstr "cannot open shared object %s: %s"

#: builtins/enable.def:326
#, c-format
msgid "cannot find %s in shared object %s: %s"
msgstr "cannot find %s in shared object %s: %s"

#: builtins/enable.def:450
#, c-format
msgid "%s: not dynamically loaded"
msgstr "%s: not dynamically loaded"

#: builtins/enable.def:465
#, c-format
msgid "%s: cannot delete: %s"
msgstr "%s: cannot delete: %s"

#: builtins/evalfile.c:129 execute_cmd.c:3852 shell.c:1408
#, c-format
msgid "%s: is a directory"
msgstr "%s: is a directory"

#: builtins/evalfile.c:134
#, c-format
msgid "%s: not a regular file"
msgstr "%s: not a regular file"

#: builtins/evalfile.c:142
#, c-format
msgid "%s: file is too large"
msgstr "%s: file is too large"

#: builtins/exec.def:205
#, c-format
msgid "%s: cannot execute: %s"
msgstr "%s: cannot execute: %s"

#: builtins/exit.def:83
msgid "not login shell: use `exit'"
msgstr "not login shell: use ‚Äò[1mexit[0m‚Äô"

#: builtins/exit.def:111
msgid "There are stopped jobs.\n"
msgstr "There are stopped jobs.\n"

#: builtins/fc.def:259
msgid "no command found"
msgstr "no command found"

#: builtins/fc.def:329
msgid "history specification"
msgstr "history specification"

#: builtins/fc.def:350
#, c-format
msgid "%s: cannot open temp file: %s"
msgstr "%s: cannot open temp file: %s"

#: builtins/fg_bg.def:149
#, c-format
msgid "job %d started without job control"
msgstr "job %d started without job control"

#: builtins/getopt.c:109
#, c-format
msgid "%s: illegal option -- %c\n"
msgstr "%s: illegal option -- %c\n"

#: builtins/getopt.c:110
#, c-format
msgid "%s: option requires an argument -- %c\n"
msgstr "%s: option requires an argument -- %c\n"

#: builtins/hash.def:83
msgid "hashing disabled"
msgstr "hashing disabled"

#: builtins/hash.def:128
#, c-format
msgid "%s: hash table empty\n"
msgstr "%s: hash table empty\n"

#: builtins/help.def:108
msgid "Shell commands matching keywords `"
msgstr "Shell commands matching keywords `"

#: builtins/help.def:110
msgid "Shell commands matching keyword `"
msgstr "Shell commands matching keyword `"

#: builtins/help.def:138
#, c-format
msgid ""
"no help topics match `%s'.  Try `help help' or `man -k %s' or `info %s'."
msgstr ""
"no help topics match ‚Äò[1m%s[0m‚Äô.  Try ‚Äò[1mhelp help[0m‚Äô or ‚Äò[1mman -k %s[0m‚Äô "
"or ‚Äò[1minfo %s[0m‚Äô."

#: builtins/help.def:164
#, c-format
msgid "%s: cannot open: %s"
msgstr "%s: cannot open: %s"

#: builtins/help.def:182
msgid ""
"These shell commands are defined internally.  Type `help' to see this list.\n"
"Type `help name' to find out more about the function `name'.\n"
"Use `info bash' to find out more about the shell in general.\n"
"Use `man -k' or `info' to find out more about commands not in this list.\n"
"\n"
"A star (*) next to a name means that the command is disabled.\n"
"\n"
msgstr ""
"These shell commands are defined internally.  Type ‚Äò[1mhelp[0m‚Äô to see this "
"list.\n"
"Type ‚Äò[1mhelp name[0m‚Äô to find out more about the function ‚Äò[1mname[0m‚Äô.\n"
"Use ‚Äò[1minfo bash[0m‚Äô to find out more about the shell in general.\n"
"Use ‚Äò[1mman -k[0m‚Äô or ‚Äò[1minfo[0m‚Äô to find out more about commands not in "
"this list.\n"
"\n"
"A star (*) next to a name means that the command is disabled.\n"
"\n"

#: builtins/history.def:150
msgid "cannot use more than one of -anrw"
msgstr "cannot use more than one of -anrw"

#: builtins/history.def:182
msgid "history position"
msgstr "history position"

#: builtins/history.def:400
#, c-format
msgid "%s: history expansion failed"
msgstr "%s: history expansion failed"

#: builtins/jobs.def:99
msgid "no other options allowed with `-x'"
msgstr "no other options allowed with ‚Äò[1m-x[0m‚Äô"

#: builtins/kill.def:187
#, c-format
msgid "%s: arguments must be process or job IDs"
msgstr "%s: arguments must be process or job IDs"

#: builtins/kill.def:250
msgid "Unknown error"
msgstr "Unknown error"

#: builtins/let.def:94 builtins/let.def:119 expr.c:497 expr.c:512
msgid "expression expected"
msgstr "expression expected"

#: builtins/printf.def:327
#, c-format
msgid "`%s': missing format character"
msgstr "‚Äò[1m%s[0m‚Äô: missing format character"

#: builtins/printf.def:502
#, c-format
msgid "`%c': invalid format character"
msgstr "‚Äò[1m%c[0m‚Äô: invalid format character"

#: builtins/printf.def:708
msgid "missing hex digit for \\x"
msgstr "missing hex digit for \\x"

#: builtins/pushd.def:173
msgid "no other directory"
msgstr "no other directory"

#: builtins/pushd.def:440
msgid "<no current directory>"
msgstr "<no current directory>"

#: builtins/pushd.def:657
msgid "Display the list of currently remembered directories.  Directories"
msgstr "Display the list of currently remembered directories.  Directories"

#: builtins/pushd.def:658
msgid "find their way onto the list with the `pushd' command; you can get"
msgstr ""
"find their way onto the list with the ‚Äò[1mpushd[0m‚Äô command; you can get"

#: builtins/pushd.def:659
msgid "back up through the list with the `popd' command."
msgstr "back up through the list with the ‚Äò[1mpopd[0m‚Äô command."

#: builtins/pushd.def:661
msgid "The -l flag specifies that `dirs' should not print shorthand versions"
msgstr ""
"The -l flag specifies that ‚Äò[1mdirs[0m‚Äô should not print shorthand versions"

#: builtins/pushd.def:662
msgid "of directories which are relative to your home directory.  This means"
msgstr "of directories which are relative to your home directory.  This means"

#: builtins/pushd.def:663
msgid "that `~/bin' might be displayed as `/homes/bfox/bin'.  The -v flag"
msgstr ""
"that ‚Äò[1m~/bin[0m‚Äô might be displayed as ‚Äò[1m/homes/bfox/bin[0m‚Äô.  The -v "
"flag"

#: builtins/pushd.def:664
msgid "causes `dirs' to print the directory stack with one entry per line,"
msgstr ""
"causes ‚Äò[1mdirs[0m‚Äô to print the directory stack with one entry per line,"

#: builtins/pushd.def:665
msgid "prepending the directory name with its position in the stack.  The -p"
msgstr "prepending the directory name with its position in the stack.  The -p"

#: builtins/pushd.def:666
msgid "flag does the same thing, but the stack position is not prepended."
msgstr "flag does the same thing, but the stack position is not prepended."

#: builtins/pushd.def:667
msgid "The -c flag clears the directory stack by deleting all of the elements."
msgstr ""
"The -c flag clears the directory stack by deleting all of the elements."

#: builtins/pushd.def:669
msgid "+N   displays the Nth entry counting from the left of the list shown by"
msgstr ""
"+N   displays the Nth entry counting from the left of the list shown by"

#: builtins/pushd.def:670 builtins/pushd.def:673
msgid "     dirs when invoked without options, starting with zero."
msgstr "     dirs when invoked without options, starting with zero."

#: builtins/pushd.def:672
msgid ""
"-N   displays the Nth entry counting from the right of the list shown by"
msgstr ""
"-N   displays the Nth entry counting from the right of the list shown by"

#: builtins/pushd.def:678
msgid "Adds a directory to the top of the directory stack, or rotates"
msgstr "Adds a directory to the top of the directory stack, or rotates"

#: builtins/pushd.def:679
msgid "the stack, making the new top of the stack the current working"
msgstr "the stack, making the new top of the stack the current working"

#: builtins/pushd.def:680
msgid "directory.  With no arguments, exchanges the top two directories."
msgstr "directory.  With no arguments, exchanges the top two directories."

#: builtins/pushd.def:682
msgid "+N   Rotates the stack so that the Nth directory (counting"
msgstr "+N   Rotates the stack so that the Nth directory (counting"

#: builtins/pushd.def:683
msgid "     from the left of the list shown by `dirs', starting with"
msgstr "     from the left of the list shown by ‚Äò[1mdirs[0m‚Äô, starting with"

#: builtins/pushd.def:684 builtins/pushd.def:688
msgid "     zero) is at the top."
msgstr "     zero) is at the top."

#: builtins/pushd.def:686
msgid "-N   Rotates the stack so that the Nth directory (counting"
msgstr "-N   Rotates the stack so that the Nth directory (counting"

#: builtins/pushd.def:687
msgid "     from the right of the list shown by `dirs', starting with"
msgstr "     from the right of the list shown by ‚Äò[1mdirs[0m‚Äô, starting with"

#: builtins/pushd.def:690
msgid "-n   suppress the normal change of directory when adding directories"
msgstr "-n   suppress the normal change of directory when adding directories"

#: builtins/pushd.def:691
msgid "     to the stack, so only the stack is manipulated."
msgstr "     to the stack, so only the stack is manipulated."

#: builtins/pushd.def:693
msgid "dir  adds DIR to the directory stack at the top, making it the"
msgstr "dir  adds DIR to the directory stack at the top, making it the"

#: builtins/pushd.def:694
msgid "     new current working directory."
msgstr "     new current working directory."

#: builtins/pushd.def:696 builtins/pushd.def:716
msgid "You can see the directory stack with the `dirs' command."
msgstr "You can see the directory stack with the ‚Äò[1mdirs[0m‚Äô command."

#: builtins/pushd.def:701
msgid "Removes entries from the directory stack.  With no arguments,"
msgstr "Removes entries from the directory stack.  With no arguments,"

#: builtins/pushd.def:702
msgid "removes the top directory from the stack, and cd's to the new"
msgstr "removes the top directory from the stack, and cd's to the new"

#: builtins/pushd.def:703
msgid "top directory."
msgstr "top directory."

#: builtins/pushd.def:705
msgid "+N   removes the Nth entry counting from the left of the list"
msgstr "+N   removes the Nth entry counting from the left of the list"

#: builtins/pushd.def:706
msgid "     shown by `dirs', starting with zero.  For example: `popd +0'"
msgstr ""
"     shown by ‚Äò[1mdirs[0m‚Äô, starting with zero.  For example: ‚Äò[1mpopd +0[0m‚Äô"

#: builtins/pushd.def:707
msgid "     removes the first directory, `popd +1' the second."
msgstr "     removes the first directory, ‚Äò[1mpopd +1[0m‚Äô the second."

#: builtins/pushd.def:709
msgid "-N   removes the Nth entry counting from the right of the list"
msgstr "-N   removes the Nth entry counting from the right of the list"

#: builtins/pushd.def:710
msgid "     shown by `dirs', starting with zero.  For example: `popd -0'"
msgstr ""
"     shown by ‚Äò[1mdirs[0m‚Äô, starting with zero.  For example: ‚Äò[1mpopd -0[0m‚Äô"

#: builtins/pushd.def:711
msgid "     removes the last directory, `popd -1' the next to last."
msgstr "     removes the last directory, ‚Äò[1mpopd -1[0m‚Äô the next to last."

#: builtins/pushd.def:713
msgid "-n   suppress the normal change of directory when removing directories"
msgstr "-n   suppress the normal change of directory when removing directories"

#: builtins/pushd.def:714
msgid "     from the stack, so only the stack is manipulated."
msgstr "     from the stack, so only the stack is manipulated."

#: builtins/read.def:211
#, c-format
msgid "%s: invalid timeout specification"
msgstr "%s: invalid timeout specification"

#: builtins/read.def:234
#, c-format
msgid "%s: invalid file descriptor specification"
msgstr "%s: invalid file descriptor specification"

#: builtins/read.def:241
#, c-format
msgid "%d: invalid file descriptor: %s"
msgstr "%d: invalid file descriptor: %s"

#: builtins/read.def:474
#, c-format
msgid "read error: %d: %s"
msgstr "read error: %d: %s"

#: builtins/return.def:63
msgid "can only `return' from a function or sourced script"
msgstr "can only ‚Äò[1mreturn[0m‚Äô from a function or sourced script"

#: builtins/set.def:745
msgid "cannot simultaneously unset a function and a variable"
msgstr "cannot simultaneously unset a function and a variable"

#: builtins/set.def:782
#, c-format
msgid "%s: cannot unset"
msgstr "%s: cannot unset"

#: builtins/set.def:789
#, c-format
msgid "%s: cannot unset: readonly %s"
msgstr "%s: cannot unset: readonly %s"

#: builtins/set.def:800
#, c-format
msgid "%s: not an array variable"
msgstr "%s: not an array variable"

#: builtins/setattr.def:166
#, c-format
msgid "%s: not a function"
msgstr "%s: not a function"

#: builtins/shift.def:66 builtins/shift.def:72
msgid "shift count"
msgstr "shift count"

#: builtins/shopt.def:227
msgid "cannot set and unset shell options simultaneously"
msgstr "cannot set and unset shell options simultaneously"

#: builtins/shopt.def:292
#, c-format
msgid "%s: invalid shell option name"
msgstr "%s: invalid shell option name"

#: builtins/source.def:117
msgid "filename argument required"
msgstr "filename argument required"

#: builtins/source.def:137
#, c-format
msgid "%s: file not found"
msgstr "%s: file not found"

#: builtins/suspend.def:93
msgid "cannot suspend"
msgstr "cannot suspend"

#: builtins/suspend.def:103
msgid "cannot suspend a login shell"
msgstr "cannot suspend a login shell"

#: builtins/type.def:232
#, c-format
msgid "%s is aliased to `%s'\n"
msgstr "%s is aliased to ‚Äò[1m%s[0m‚Äô\n"

#: builtins/type.def:253
#, c-format
msgid "%s is a shell keyword\n"
msgstr "%s is a shell keyword\n"

#: builtins/type.def:273
#, c-format
msgid "%s is a function\n"
msgstr "%s is a function\n"

#: builtins/type.def:298
#, c-format
msgid "%s is a shell builtin\n"
msgstr "%s is a shell builtin\n"

#: builtins/type.def:319
#, c-format
msgid "%s is %s\n"
msgstr "%s is %s\n"

#: builtins/type.def:339
#, c-format
msgid "%s is hashed (%s)\n"
msgstr "%s is hashed (%s)\n"

#: builtins/ulimit.def:344
#, c-format
msgid "%s: invalid limit argument"
msgstr "%s: invalid limit argument"

#: builtins/ulimit.def:370
#, c-format
msgid "`%c': bad command"
msgstr "‚Äò[1m%c[0m‚Äô: bad command"

#: builtins/ulimit.def:399
#, c-format
msgid "%s: cannot get limit: %s"
msgstr "%s: cannot get limit: %s"

#: builtins/ulimit.def:437
#, c-format
msgid "%s: cannot modify limit: %s"
msgstr "%s: cannot modify limit: %s"

#: builtins/umask.def:112
msgid "octal number"
msgstr "octal number"

#: builtins/umask.def:226
#, c-format
msgid "`%c': invalid symbolic mode operator"
msgstr "‚Äò[1m%c[0m‚Äô: invalid symbolic mode operator"

#: builtins/umask.def:281
#, c-format
msgid "`%c': invalid symbolic mode character"
msgstr "‚Äò[1m%c[0m‚Äô: invalid symbolic mode character"

#: error.c:165
#, c-format
msgid "last command: %s\n"
msgstr "last command: %s\n"

#: error.c:173
msgid "Aborting..."
msgstr "Aborting..."

#: error.c:260
#, c-format
msgid "%s: warning: "
msgstr "%s: warning: "

#: error.c:405
msgid "unknown command error"
msgstr "unknown command error"

#: error.c:406
msgid "bad command type"
msgstr "bad command type"

#: error.c:407
msgid "bad connector"
msgstr "bad connector"

#: error.c:408
msgid "bad jump"
msgstr "bad jump"

#: error.c:446
#, c-format
msgid "%s: unbound variable"
msgstr "%s: unbound variable"

#: eval.c:176
msgid "timed out waiting for input: auto-logout\n"
msgstr "timed out waiting for input: auto-logout\n"

#: execute_cmd.c:471
#, c-format
msgid "cannot redirect standard input from /dev/null: %s"
msgstr "cannot redirect standard input from /dev/null: %s"

#: execute_cmd.c:1036
#, c-format
msgid "TIMEFORMAT: `%c': invalid format character"
msgstr "TIMEFORMAT: ‚Äò[1m%c[0m‚Äô: invalid format character"

#: execute_cmd.c:3551
#, c-format
msgid "%s: restricted: cannot specify `/' in command names"
msgstr "%s: restricted: cannot specify ‚Äò[1m/[0m‚Äô in command names"

#: execute_cmd.c:3639
#, c-format
msgid "%s: command not found"
msgstr "%s: command not found"

#: execute_cmd.c:3876
#, c-format
msgid "%s: %s: bad interpreter"
msgstr "%s: %s: bad interpreter"

#: execute_cmd.c:3913
#, c-format
msgid "%s: cannot execute binary file"
msgstr "%s: cannot execute binary file"

#: execute_cmd.c:4025
#, c-format
msgid "cannot duplicate fd %d to fd %d"
msgstr "cannot duplicate fd %d to fd %d"

#: expr.c:240
msgid "expression recursion level exceeded"
msgstr "expression recursion level exceeded"

#: expr.c:264
msgid "recursion stack underflow"
msgstr "recursion stack underflow"

#: expr.c:375
msgid "syntax error in expression"
msgstr "syntax error in expression"

#: expr.c:415
msgid "attempted assignment to non-variable"
msgstr "attempted assignment to non-variable"

#: expr.c:436 expr.c:441 expr.c:751
msgid "division by 0"
msgstr "division by 0"

#: expr.c:467
msgid "bug: bad expassign token"
msgstr "bug: bad expassign token"

#: expr.c:509
msgid "`:' expected for conditional expression"
msgstr "‚Äò[1m:[0m‚Äô expected for conditional expression"

#: expr.c:776
msgid "exponent less than 0"
msgstr "exponent less than 0"

#: expr.c:821
msgid "identifier expected after pre-increment or pre-decrement"
msgstr "identifier expected after pre-increment or pre-decrement"

#: expr.c:849
msgid "missing `)'"
msgstr "missing ‚Äò[1m)[0m‚Äô"

#: expr.c:892
msgid "syntax error: operand expected"
msgstr "syntax error: operand expected"

#: expr.c:1178
msgid "invalid number"
msgstr "invalid number"

#: expr.c:1182
msgid "invalid arithmetic base"
msgstr "invalid arithmetic base"

#: expr.c:1202
msgid "value too great for base"
msgstr "value too great for base"

#: general.c:62
msgid "getcwd: cannot access parent directories"
msgstr "getcwd: cannot access parent directories"

#: input.c:231
#, c-format
msgid "cannot allocate new file descriptor for bash input from fd %d"
msgstr "cannot allocate new file descriptor for bash input from fd %d"

#: input.c:239
#, c-format
msgid "save_bash_input: buffer already exists for new fd %d"
msgstr "save_bash_input: buffer already exists for new fd %d"

#: jobs.c:923
#, c-format
msgid "deleting stopped job %d with process group %ld"
msgstr "deleting stopped job %d with process group %ld"

#: jobs.c:1308
#, c-format
msgid "describe_pid: %ld: no such pid"
msgstr "describe_pid: %ld: no such pid"

#: jobs.c:1981 nojobs.c:648
#, c-format
msgid "wait: pid %ld is not a child of this shell"
msgstr "wait: pid %ld is not a child of this shell"

#: jobs.c:2180
#, c-format
msgid "wait_for: No record of process %ld"
msgstr "wait_for: No record of process %ld"

#: jobs.c:2435
#, c-format
msgid "wait_for_job: job %d is stopped"
msgstr "wait_for_job: job %d is stopped"

#: jobs.c:2657
#, c-format
msgid "%s: job has terminated"
msgstr "%s: job has terminated"

#: jobs.c:2666
#, c-format
msgid "%s: job %d already in background"
msgstr "%s: job %d already in background"

#: jobs.c:3452
msgid "no job control in this shell"
msgstr "no job control in this shell"

#: lib/malloc/malloc.c:298
#, c-format
msgid "malloc: failed assertion: %s\n"
msgstr "malloc: failed assertion: %s\n"

#: lib/malloc/malloc.c:314
#, c-format
msgid ""
"\r\n"
"malloc: %s:%d: assertion botched\r\n"
msgstr ""
"\r\n"
"malloc: %s:%d: assertion botched\r\n"

#: lib/malloc/malloc.c:740
msgid "malloc: block on free list clobbered"
msgstr "malloc: block on free list clobbered"

#: lib/malloc/malloc.c:817
msgid "free: called with already freed block argument"
msgstr "free: called with already freed block argument"

#: lib/malloc/malloc.c:820
msgid "free: called with unallocated block argument"
msgstr "free: called with unallocated block argument"

#: lib/malloc/malloc.c:839
msgid "free: underflow detected; mh_nbytes out of range"
msgstr "free: underflow detected; mh_nbytes out of range"

#: lib/malloc/malloc.c:845
msgid "free: start and end chunk sizes differ"
msgstr "free: start and end chunk sizes differ"

#: lib/malloc/malloc.c:942
msgid "realloc: called with unallocated block argument"
msgstr "realloc: called with unallocated block argument"

#: lib/malloc/malloc.c:957
msgid "realloc: underflow detected; mh_nbytes out of range"
msgstr "realloc: underflow detected; mh_nbytes out of range"

#: lib/malloc/malloc.c:963
msgid "realloc: start and end chunk sizes differ"
msgstr "realloc: start and end chunk sizes differ"

#: lib/malloc/table.c:175
msgid "register_alloc: alloc table is full with FIND_ALLOC?\n"
msgstr "register_alloc: alloc table is full with FIND_ALLOC?\n"

#: lib/malloc/table.c:182
#, c-format
msgid "register_alloc: %p already in table as allocated?\n"
msgstr "register_alloc: %p already in table as allocated?\n"

#: lib/malloc/table.c:218
#, c-format
msgid "register_free: %p already in table as free?\n"
msgstr "register_free: %p already in table as free?\n"

#: lib/malloc/watch.c:46
msgid "allocated"
msgstr "allocated"

#: lib/malloc/watch.c:48
msgid "freed"
msgstr "freed"

#: lib/malloc/watch.c:50
msgid "requesting resize"
msgstr "requesting resize"

#: lib/malloc/watch.c:52
msgid "just resized"
msgstr "just resized"

#: lib/malloc/watch.c:54
msgid "bug: unknown operation"
msgstr "bug: unknown operation"

#: lib/malloc/watch.c:56
#, c-format
msgid "malloc: watch alert: %p %s "
msgstr "malloc: watch alert: %p %s "

#: lib/sh/fmtulong.c:101
msgid "invalid base"
msgstr "invalid base"

#: lib/sh/netopen.c:158
#, c-format
msgid "%s: host unknown"
msgstr "%s: host unknown"

#: lib/sh/netopen.c:165
#, c-format
msgid "%s: invalid service"
msgstr "%s: invalid service"

#: lib/sh/netopen.c:296
#, c-format
msgid "%s: bad network path specification"
msgstr "%s: bad network path specification"

#: lib/sh/netopen.c:336
msgid "network operations not supported"
msgstr "network operations not supported"

#: mailcheck.c:386
msgid "You have mail in $_"
msgstr "You have mail in $_"

#: mailcheck.c:411
msgid "You have new mail in $_"
msgstr "You have new mail in $_"

#: mailcheck.c:427
#, c-format
msgid "The mail in %s has been read\n"
msgstr "The mail in %s has been read\n"

#: make_cmd.c:322
msgid "syntax error: arithmetic expression required"
msgstr "syntax error: arithmetic expression required"

#: make_cmd.c:324
msgid "syntax error: `;' unexpected"
msgstr "syntax error: ‚Äò[1m;[0m‚Äô unexpected"

#: make_cmd.c:325
#, c-format
msgid "syntax error: `((%s))'"
msgstr "syntax error: ‚Äò[1m((%s))[0m‚Äô"

#: make_cmd.c:566
#, c-format
msgid "make_here_document: bad instruction type %d"
msgstr "make_here_document: bad instruction type %d"

#: make_cmd.c:736
#, c-format
msgid "make_redirection: redirection instruction `%d' out of range"
msgstr "make_redirection: redirection instruction ‚Äò[1m%d[0m‚Äô out of range"

#: parse.y:2747
#, c-format
msgid "unexpected EOF while looking for matching `%c'"
msgstr "unexpected EOF while looking for matching ‚Äò[1m%c[0m‚Äô"

#: parse.y:3043
msgid "unexpected EOF while looking for `]]'"
msgstr "unexpected EOF while looking for ‚Äò[1m]][0m‚Äô"

#: parse.y:3048
#, c-format
msgid "syntax error in conditional expression: unexpected token `%s'"
msgstr "syntax error in conditional expression: unexpected token ‚Äò[1m%s[0m‚Äô"

#: parse.y:3052
msgid "syntax error in conditional expression"
msgstr "syntax error in conditional expression"

#: parse.y:3130
#, c-format
msgid "unexpected token `%s', expected `)'"
msgstr "unexpected token ‚Äò[1m%s[0m‚Äô, expected ‚Äò[1m)[0m‚Äô"

#: parse.y:3134
msgid "expected `)'"
msgstr "expected ‚Äò[1m)[0m‚Äô"

#: parse.y:3162
#, c-format
msgid "unexpected argument `%s' to conditional unary operator"
msgstr "unexpected argument ‚Äò[1m%s[0m‚Äô to conditional unary operator"

#: parse.y:3166
msgid "unexpected argument to conditional unary operator"
msgstr "unexpected argument to conditional unary operator"

#: parse.y:3203
#, c-format
msgid "unexpected token `%s', conditional binary operator expected"
msgstr "unexpected token ‚Äò[1m%s[0m‚Äô, conditional binary operator expected"

#: parse.y:3207
msgid "conditional binary operator expected"
msgstr "conditional binary operator expected"

#: parse.y:3223
#, c-format
msgid "unexpected argument `%s' to conditional binary operator"
msgstr "unexpected argument ‚Äò[1m%s[0m‚Äô to conditional binary operator"

#: parse.y:3227
msgid "unexpected argument to conditional binary operator"
msgstr "unexpected argument to conditional binary operator"

#: parse.y:3238
#, c-format
msgid "unexpected token `%c' in conditional command"
msgstr "unexpected token ‚Äò[1m%c[0m‚Äô in conditional command"

#: parse.y:3241
#, c-format
msgid "unexpected token `%s' in conditional command"
msgstr "unexpected token ‚Äò[1m%s[0m‚Äô in conditional command"

#: parse.y:3245
#, c-format
msgid "unexpected token %d in conditional command"
msgstr "unexpected token %d in conditional command"

#: parse.y:4461
#, c-format
msgid "syntax error near unexpected token `%s'"
msgstr "syntax error near unexpected token ‚Äò[1m%s[0m‚Äô"

#: parse.y:4479
#, c-format
msgid "syntax error near `%s'"
msgstr "syntax error near ‚Äò[1m%s[0m‚Äô"

#: parse.y:4489
msgid "syntax error: unexpected end of file"
msgstr "syntax error: unexpected end of file"

#: parse.y:4489
msgid "syntax error"
msgstr "syntax error"

#: parse.y:4551
#, c-format
msgid "Use \"%s\" to leave the shell.\n"
msgstr "Use ‚Äú[1m%s[0m‚Äù to leave the shell.\n"

#: parse.y:4710
msgid "unexpected EOF while looking for matching `)'"
msgstr "unexpected EOF while looking for matching ‚Äò[1m)[0m‚Äô"

#: pcomplete.c:1001
#, c-format
msgid "completion: function `%s' not found"
msgstr "completion: function ‚Äò[1m%s[0m‚Äô not found"

#: pcomplib.c:179
#, c-format
msgid "progcomp_insert: %s: NULL COMPSPEC"
msgstr "progcomp_insert: %s: NULL COMPSPEC"

#: print_cmd.c:264
#, c-format
msgid "print_command: bad connector `%d'"
msgstr "print_command: bad connector ‚Äò[1m%d[0m‚Äô"

#: print_cmd.c:1236
#, c-format
msgid "cprintf: `%c': invalid format character"
msgstr "cprintf: ‚Äò[1m%c[0m‚Äô: invalid format character"

#: redir.c:99
msgid "file descriptor out of range"
msgstr "file descriptor out of range"

#: redir.c:141
#, c-format
msgid "%s: ambiguous redirect"
msgstr "%s: ambiguous redirect"

#: redir.c:145
#, c-format
msgid "%s: cannot overwrite existing file"
msgstr "%s: cannot overwrite existing file"

#: redir.c:150
#, c-format
msgid "%s: restricted: cannot redirect output"
msgstr "%s: restricted: cannot redirect output"

#: redir.c:155
#, c-format
msgid "cannot create temp file for here document: %s"
msgstr "cannot create temp file for here document: %s"

#: redir.c:509
msgid "/dev/(tcp|udp)/host/port not supported without networking"
msgstr "/dev/(tcp|udp)/host/port not supported without networking"

#: redir.c:956
msgid "redirection error: cannot duplicate fd"
msgstr "redirection error: cannot duplicate fd"

#: shell.c:309
msgid "could not find /tmp, please create!"
msgstr "could not find /tmp, please create!"

#: shell.c:313
msgid "/tmp must be a valid directory name"
msgstr "/tmp must be a valid directory name"

#: shell.c:849
#, c-format
msgid "%c%c: invalid option"
msgstr "%c%c: invalid option"

#: shell.c:1598
msgid "I have no name!"
msgstr "I have no name!"

#: shell.c:1733
#, c-format
msgid ""
"Usage:\t%s [GNU long option] [option] ...\n"
"\t%s [GNU long option] [option] script-file ...\n"
msgstr ""
"Usage:\t%s [GNU long option] [option] ...\n"
"\t%s [GNU long option] [option] script-file ...\n"

#: shell.c:1735
msgid "GNU long options:\n"
msgstr "GNU long options:\n"

#: shell.c:1739
msgid "Shell options:\n"
msgstr "Shell options:\n"

#: shell.c:1740
msgid "\t-irsD or -c command or -O shopt_option\t\t(invocation only)\n"
msgstr "\t-irsD or -c command or -O shopt_option\t\t(invocation only)\n"

#: shell.c:1755
#, c-format
msgid "\t-%s or -o option\n"
msgstr "\t-%s or -o option\n"

#: shell.c:1761
#, c-format
msgid "Type `%s -c \"help set\"' for more information about shell options.\n"
msgstr ""
"Type ‚Äò[1m%s -c ‚Äú[1mhelp set[0m‚Äù[0m‚Äô for more information about shell "
"options.\n"

#: shell.c:1762
#, c-format
msgid "Type `%s -c help' for more information about shell builtin commands.\n"
msgstr ""
"Type ‚Äò[1m%s -c help[0m‚Äô for more information about shell builtin commands.\n"

#: shell.c:1763
msgid "Use the `bashbug' command to report bugs.\n"
msgstr "Use the ‚Äò[1mbashbug[0m‚Äô command to report bugs.\n"

#: sig.c:494
#, c-format
msgid "sigprocmask: %d: invalid operation"
msgstr "sigprocmask: %d: invalid operation"

#: subst.c:1123
#, c-format
msgid "bad substitution: no closing `%s' in %s"
msgstr "bad substitution: no closing ‚Äò[1m%s[0m‚Äô in %s"

#: subst.c:2269
#, c-format
msgid "%s: cannot assign list to array member"
msgstr "%s: cannot assign list to array member"

#: subst.c:4208 subst.c:4224
msgid "cannot make pipe for process substitution"
msgstr "cannot make pipe for process substitution"

#: subst.c:4255
msgid "cannot make child for process substitution"
msgstr "cannot make child for process substitution"

#: subst.c:4300
#, c-format
msgid "cannot open named pipe %s for reading"
msgstr "cannot open named pipe %s for reading"

#: subst.c:4302
#, c-format
msgid "cannot open named pipe %s for writing"
msgstr "cannot open named pipe %s for writing"

#: subst.c:4310
#, c-format
msgid "cannout reset nodelay mode for fd %d"
msgstr "cannout reset nodelay mode for fd %d"

#: subst.c:4320
#, c-format
msgid "cannot duplicate named pipe %s as fd %d"
msgstr "cannot duplicate named pipe %s as fd %d"

#: subst.c:4495
msgid "cannot make pipe for command substitution"
msgstr "cannot make pipe for command substitution"

#: subst.c:4531
msgid "cannot make child for command substitution"
msgstr "cannot make child for command substitution"

#: subst.c:4548
msgid "command_substitute: cannot duplicate pipe as fd 1"
msgstr "command_substitute: cannot duplicate pipe as fd 1"

#: subst.c:5013
#, c-format
msgid "%s: parameter null or not set"
msgstr "%s: parameter null or not set"

#: subst.c:5287
#, c-format
msgid "%s: substring expression < 0"
msgstr "%s: substring expression < 0"

#: subst.c:6058
#, c-format
msgid "%s: bad substitution"
msgstr "%s: bad substitution"

#: subst.c:6134
#, c-format
msgid "$%s: cannot assign in this way"
msgstr "$%s: cannot assign in this way"

#: subst.c:7687
#, c-format
msgid "no match: %s"
msgstr "no match: %s"

#: test.c:154
msgid "argument expected"
msgstr "argument expected"

#: test.c:163
#, c-format
msgid "%s: integer expression expected"
msgstr "%s: integer expression expected"

#: test.c:361
msgid "`)' expected"
msgstr "‚Äò[1m)[0m‚Äô expected"

#: test.c:363
#, c-format
msgid "`)' expected, found %s"
msgstr "‚Äò[1m)[0m‚Äô expected, found %s"

#: test.c:378 test.c:787 test.c:790
#, c-format
msgid "%s: unary operator expected"
msgstr "%s: unary operator expected"

#: test.c:543 test.c:830
#, c-format
msgid "%s: binary operator expected"
msgstr "%s: binary operator expected"

#: test.c:905
msgid "missing `]'"
msgstr "missing ‚Äò[1m][0m‚Äô"

#: trap.c:194
msgid "invalid signal number"
msgstr "invalid signal number"

#: trap.c:309
#, c-format
msgid "run_pending_traps: bad value in trap_list[%d]: %p"
msgstr "run_pending_traps: bad value in trap_list[%d]: %p"

#: trap.c:313
#, c-format
msgid ""
"run_pending_traps: signal handler is SIG_DFL, resending %d (%s) to myself"
msgstr ""
"run_pending_traps: signal handler is SIG_DFL, resending %d (%s) to myself"

#: trap.c:349
#, c-format
msgid "trap_handler: bad signal %d"
msgstr "trap_handler: bad signal %d"

#: variables.c:320
#, c-format
msgid "error importing function definition for `%s'"
msgstr "error importing function definition for ‚Äò[1m%s[0m‚Äô"

#: variables.c:692
#, c-format
msgid "shell level (%d) too high, resetting to 1"
msgstr "shell level (%d) too high, resetting to 1"

#: variables.c:1651
msgid "make_local_variable: no function context at current scope"
msgstr "make_local_variable: no function context at current scope"

#: variables.c:2807
msgid "all_local_variables: no function context at current scope"
msgstr "all_local_variables: no function context at current scope"

#: variables.c:3021 variables.c:3030
#, c-format
msgid "invalid character %d in exportstr for %s"
msgstr "invalid character %d in exportstr for %s"

#: variables.c:3036
#, c-format
msgid "no `=' in exportstr for %s"
msgstr "no ‚Äò[1m=[0m‚Äô in exportstr for %s"

#: variables.c:3463
msgid "pop_var_context: head of shell_variables not a function context"
msgstr "pop_var_context: head of shell_variables not a function context"

#: variables.c:3476
msgid "pop_var_context: no global_variables context"
msgstr "pop_var_context: no global_variables context"

#: variables.c:3548
msgid "pop_scope: head of shell_variables not a temporary environment scope"
msgstr "pop_scope: head of shell_variables not a temporary environment scope"

#: version.c:82
msgid "Copyright (C) 2005 Free Software Foundation, Inc.\n"
msgstr "Copyright (C) 2005 Free Software Foundation, Inc.\n"

#: xmalloc.c:93
#, c-format
msgid "xmalloc: cannot allocate %lu bytes (%lu bytes allocated)"
msgstr "xmalloc: cannot allocate %lu bytes (%lu bytes allocated)"

#: xmalloc.c:95
#, c-format
msgid "xmalloc: cannot allocate %lu bytes"
msgstr "xmalloc: cannot allocate %lu bytes"

#: xmalloc.c:115
#, c-format
msgid "xrealloc: cannot reallocate %lu bytes (%lu bytes allocated)"
msgstr "xrealloc: cannot reallocate %lu bytes (%lu bytes allocated)"

#: xmalloc.c:117
#, c-format
msgid "xrealloc: cannot allocate %lu bytes"
msgstr "xrealloc: cannot allocate %lu bytes"

#: xmalloc.c:151
#, c-format
msgid "xmalloc: %s:%d: cannot allocate %lu bytes (%lu bytes allocated)"
msgstr "xmalloc: %s:%d: cannot allocate %lu bytes (%lu bytes allocated)"

#: xmalloc.c:153
#, c-format
msgid "xmalloc: %s:%d: cannot allocate %lu bytes"
msgstr "xmalloc: %s:%d: cannot allocate %lu bytes"

#: xmalloc.c:175
#, c-format
msgid "xrealloc: %s:%d: cannot reallocate %lu bytes (%lu bytes allocated)"
msgstr "xrealloc: %s:%d: cannot reallocate %lu bytes (%lu bytes allocated)"

#: xmalloc.c:177
#, c-format
msgid "xrealloc: %s:%d: cannot allocate %lu bytes"
msgstr "xrealloc: %s:%d: cannot allocate %lu bytes"

#: builtins.c:244
msgid ""
" `alias' with no arguments or with the -p option prints the list\n"
"    of aliases in the form alias NAME=VALUE on standard output.\n"
"    Otherwise, an alias is defined for each NAME whose VALUE is given.\n"
"    A trailing space in VALUE causes the next word to be checked for\n"
"    alias substitution when the alias is expanded.  Alias returns\n"
"    true unless a NAME is given for which no alias has been defined."
msgstr ""
" ‚Äò[1malias[0m‚Äô with no arguments or with the -p option prints the list\n"
"    of aliases in the form alias NAME=VALUE on standard output.\n"
"    Otherwise, an alias is defined for each NAME whose VALUE is given.\n"
"    A trailing space in VALUE causes the next word to be checked for\n"
"    alias substitution when the alias is expanded.  Alias returns\n"
"    true unless a NAME is given for which no alias has been defined."

#: builtins.c:257
msgid ""
" Remove NAMEs from the list of defined aliases.  If the -a option is given,\n"
"    then remove all alias definitions."
msgstr ""
" Remove NAMEs from the list of defined aliases.  If the -a option is given,\n"
"    then remove all alias definitions."

#: builtins.c:266
msgid ""
" Bind a key sequence to a Readline function or a macro, or set\n"
"    a Readline variable.  The non-option argument syntax is equivalent\n"
"    to that found in ~/.inputrc, but must be passed as a single argument:\n"
"    bind '\"\\C-x\\C-r\": re-read-init-file'.\n"
"    bind accepts the following options:\n"
"      -m  keymap         Use `keymap' as the keymap for the duration of "
"this\n"
"                         command.  Acceptable keymap names are emacs,\n"
"                         emacs-standard, emacs-meta, emacs-ctlx, vi, vi-"
"move,\n"
"                         vi-command, and vi-insert.\n"
"      -l                 List names of functions.\n"
"      -P                 List function names and bindings.\n"
"      -p                 List functions and bindings in a form that can be\n"
"                         reused as input.\n"
"      -r  keyseq         Remove the binding for KEYSEQ.\n"
"      -x  keyseq:shell-command\tCause SHELL-COMMAND to be executed when\n"
"    \t\t\t\tKEYSEQ is entered.\n"
"      -f  filename       Read key bindings from FILENAME.\n"
"      -q  function-name  Query about which keys invoke the named function.\n"
"      -u  function-name  Unbind all keys which are bound to the named "
"function.\n"
"      -V                 List variable names and values\n"
"      -v                 List variable names and values in a form that can\n"
"                         be reused as input.\n"
"      -S                 List key sequences that invoke macros and their "
"values\n"
"      -s                 List key sequences that invoke macros and their "
"values\n"
"                         in a form that can be reused as input."
msgstr ""
" Bind a key sequence to a Readline function or a macro, or set\n"
"    a Readline variable.  The non-option argument syntax is equivalent\n"
"    to that found in ~/.inputrc, but must be passed as a single argument:\n"
"    bind '‚Äú[1m\\C-x\\C-r[0m‚Äù: re-read-init-file'.\n"
"    bind accepts the following options:\n"
"      -m  keymap         Use ‚Äò[1mkeymap[0m‚Äô as the keymap for the duration "
"of this\n"
"                         command.  Acceptable keymap names are emacs,\n"
"                         emacs-standard, emacs-meta, emacs-ctlx, vi, vi-"
"move,\n"
"                         vi-command, and vi-insert.\n"
"      -l                 List names of functions.\n"
"      -P                 List function names and bindings.\n"
"      -p                 List functions and bindings in a form that can be\n"
"                         reused as input.\n"
"      -r  keyseq         Remove the binding for KEYSEQ.\n"
"      -x  keyseq:shell-command\tCause SHELL-COMMAND to be executed when\n"
"    \t\t\t\tKEYSEQ is entered.\n"
"      -f  filename       Read key bindings from FILENAME.\n"
"      -q  function-name  Query about which keys invoke the named function.\n"
"      -u  function-name  Unbind all keys which are bound to the named "
"function.\n"
"      -V                 List variable names and values\n"
"      -v                 List variable names and values in a form that can\n"
"                         be reused as input.\n"
"      -S                 List key sequences that invoke macros and their "
"values\n"
"      -s                 List key sequences that invoke macros and their "
"values\n"
"                         in a form that can be reused as input."

#: builtins.c:297
msgid ""
" Exit from within a FOR, WHILE or UNTIL loop.  If N is specified,\n"
"    break N levels."
msgstr ""
" Exit from within a FOR, WHILE or UNTIL loop.  If N is specified,\n"
"    break N levels."

#: builtins.c:304
msgid ""
" Resume the next iteration of the enclosing FOR, WHILE or UNTIL loop.\n"
"    If N is specified, resume at the N-th enclosing loop."
msgstr ""
" Resume the next iteration of the enclosing FOR, WHILE or UNTIL loop.\n"
"    If N is specified, resume at the N-th enclosing loop."

#: builtins.c:311
msgid ""
" Run a shell builtin.  This is useful when you wish to rename a\n"
"    shell builtin to be a function, but need the functionality of the\n"
"    builtin within the function itself."
msgstr ""
" Run a shell builtin.  This is useful when you wish to rename a\n"
"    shell builtin to be a function, but need the functionality of the\n"
"    builtin within the function itself."

#: builtins.c:320
msgid ""
" Returns the context of the current subroutine call.\n"
"    \n"
"    Without EXPR, returns returns \"$line $filename\".  With EXPR,\n"
"    returns \"$line $subroutine $filename\"; this extra information\n"
"    can be used used to provide a stack trace.\n"
"    \n"
"    The value of EXPR indicates how many call frames to go back before the\n"
"    current one; the top frame is frame 0."
msgstr ""
" Returns the context of the current subroutine call.\n"
"    \n"
"    Without EXPR, returns returns ‚Äú[1m$line $filename[0m‚Äù.  With EXPR,\n"
"    returns ‚Äú[1m$line $subroutine $filename[0m‚Äù; this extra information\n"
"    can be used used to provide a stack trace.\n"
"    \n"
"    The value of EXPR indicates how many call frames to go back before the\n"
"    current one; the top frame is frame 0."

#: builtins.c:334
msgid ""
" Change the current directory to DIR.  The variable $HOME is the\n"
"    default DIR.  The variable CDPATH defines the search path for\n"
"    the directory containing DIR.  Alternative directory names in CDPATH\n"
"    are separated by a colon (:).  A null directory name is the same as\n"
"    the current directory, i.e. `.'.  If DIR begins with a slash (/),\n"
"    then CDPATH is not used.  If the directory is not found, and the\n"
"    shell option `cdable_vars' is set, then try the word as a variable\n"
"    name.  If that variable has a value, then cd to the value of that\n"
"    variable.  The -P option says to use the physical directory structure\n"
"    instead of following symbolic links; the -L option forces symbolic "
"links\n"
"    to be followed."
msgstr ""
" Change the current directory to DIR.  The variable $HOME is the\n"
"    default DIR.  The variable CDPATH defines the search path for\n"
"    the directory containing DIR.  Alternative directory names in CDPATH\n"
"    are separated by a colon (:).  A null directory name is the same as\n"
"    the current directory, i.e. ‚Äò[1m.[0m‚Äô.  If DIR begins with a slash (/),\n"
"    then CDPATH is not used.  If the directory is not found, and the\n"
"    shell option ‚Äò[1mcdable_vars[0m‚Äô is set, then try the word as a "
"variable\n"
"    name.  If that variable has a value, then cd to the value of that\n"
"    variable.  The -P option says to use the physical directory structure\n"
"    instead of following symbolic links; the -L option forces symbolic "
"links\n"
"    to be followed."

#: builtins.c:350
msgid ""
" Print the current working directory.  With the -P option, pwd prints\n"
"    the physical directory, without any symbolic links; the -L option\n"
"    makes pwd follow symbolic links."
msgstr ""
" Print the current working directory.  With the -P option, pwd prints\n"
"    the physical directory, without any symbolic links; the -L option\n"
"    makes pwd follow symbolic links."

#: builtins.c:358
msgid " No effect; the command does nothing.  A zero exit code is returned."
msgstr " No effect; the command does nothing.  A zero exit code is returned."

#: builtins.c:364
msgid " Return a successful result."
msgstr " Return a successful result."

#: builtins.c:370
msgid " Return an unsuccessful result."
msgstr " Return an unsuccessful result."

#: builtins.c:376
msgid ""
" Runs COMMAND with ARGS ignoring shell functions.  If you have a shell\n"
"    function called `ls', and you wish to call the command `ls', you can\n"
"    say \"command ls\".  If the -p option is given, a default value is used\n"
"    for PATH that is guaranteed to find all of the standard utilities.  If\n"
"    the -V or -v option is given, a string is printed describing COMMAND.\n"
"    The -V option produces a more verbose description."
msgstr ""
" Runs COMMAND with ARGS ignoring shell functions.  If you have a shell\n"
"    function called ‚Äò[1mls[0m‚Äô, and you wish to call the command ‚Äò[1mls[0m‚Äô, "
"you can\n"
"    say ‚Äú[1mcommand ls[0m‚Äù.  If the -p option is given, a default value is "
"used\n"
"    for PATH that is guaranteed to find all of the standard utilities.  If\n"
"    the -V or -v option is given, a string is printed describing COMMAND.\n"
"    The -V option produces a more verbose description."

#: builtins.c:387
msgid ""
" Declare variables and/or give them attributes.  If no NAMEs are\n"
"    given, then display the values of variables instead.  The -p option\n"
"    will display the attributes and values of each NAME.\n"
"    \n"
"    The flags are:\n"
"    \n"
"      -a\tto make NAMEs arrays (if supported)\n"
"      -f\tto select from among function names only\n"
"      -F\tto display function names (and line number and source file name "
"if\n"
"    \tdebugging) without definitions\n"
"      -i\tto make NAMEs have the `integer' attribute\n"
"      -r\tto make NAMEs readonly\n"
"      -t\tto make NAMEs have the `trace' attribute\n"
"      -x\tto make NAMEs export\n"
"    \n"
"    Variables with the integer attribute have arithmetic evaluation (see\n"
"    `let') done when the variable is assigned to.\n"
"    \n"
"    When displaying values of variables, -f displays a function's name\n"
"    and definition.  The -F option restricts the display to function\n"
"    name only.\n"
"    \n"
"    Using `+' instead of `-' turns off the given attribute instead.  When\n"
"    used in a function, makes NAMEs local, as with the `local' command."
msgstr ""
" Declare variables and/or give them attributes.  If no NAMEs are\n"
"    given, then display the values of variables instead.  The -p option\n"
"    will display the attributes and values of each NAME.\n"
"    \n"
"    The flags are:\n"
"    \n"
"      -a\tto make NAMEs arrays (if supported)\n"
"      -f\tto select from among function names only\n"
"      -F\tto display function names (and line number and source file name "
"if\n"
"    \tdebugging) without definitions\n"
"      -i\tto make NAMEs have the ‚Äò[1minteger[0m‚Äô attribute\n"
"      -r\tto make NAMEs readonly\n"
"      -t\tto make NAMEs have the ‚Äò[1mtrace[0m‚Äô attribute\n"
"      -x\tto make NAMEs export\n"
"    \n"
"    Variables with the integer attribute have arithmetic evaluation (see\n"
"    ‚Äò[1mlet[0m‚Äô) done when the variable is assigned to.\n"
"    \n"
"    When displaying values of variables, -f displays a function's name\n"
"    and definition.  The -F option restricts the display to function\n"
"    name only.\n"
"    \n"
"    Using ‚Äò[1m+[0m‚Äô instead of ‚Äò[1m-[0m‚Äô turns off the given attribute "
"instead.  When\n"
"    used in a function, makes NAMEs local, as with the ‚Äò[1mlocal[0m‚Äô command."

#: builtins.c:416
msgid " Obsolete.  See `declare'."
msgstr " Obsolete.  See ‚Äò[1mdeclare[0m‚Äô."

#: builtins.c:422
msgid ""
" Create a local variable called NAME, and give it VALUE.  LOCAL\n"
"    can only be used within a function; it makes the variable NAME\n"
"    have a visible scope restricted to that function and its children."
msgstr ""
" Create a local variable called NAME, and give it VALUE.  LOCAL\n"
"    can only be used within a function; it makes the variable NAME\n"
"    have a visible scope restricted to that function and its children."

#: builtins.c:431
msgid ""
" Output the ARGs.  If -n is specified, the trailing newline is\n"
"    suppressed.  If the -e option is given, interpretation of the\n"
"    following backslash-escaped characters is turned on:\n"
"    \t\\a\talert (bell)\n"
"    \t\\b\tbackspace\n"
"    \t\\c\tsuppress trailing newline\n"
"    \t\\E\tescape character\n"
"    \t\\f\tform feed\n"
"    \t\\n\tnew line\n"
"    \t\\r\tcarriage return\n"
"    \t\\t\thorizontal tab\n"
"    \t\\v\tvertical tab\n"
"    \t\\\\\tbackslash\n"
"    \t\\num\tthe character whose ASCII code is NUM (octal).\n"
"    \n"
"    You can explicitly turn off the interpretation of the above characters\n"
"    with the -E option."
msgstr ""
" Output the ARGs.  If -n is specified, the trailing newline is\n"
"    suppressed.  If the -e option is given, interpretation of the\n"
"    following backslash-escaped characters is turned on:\n"
"    \t\\a\talert (bell)\n"
"    \t\\b\tbackspace\n"
"    \t\\c\tsuppress trailing newline\n"
"    \t\\E\tescape character\n"
"    \t\\f\tform feed\n"
"    \t\\n\tnew line\n"
"    \t\\r\tcarriage return\n"
"    \t\\t\thorizontal tab\n"
"    \t\\v\tvertical tab\n"
"    \t\\\\\tbackslash\n"
"    \t\\num\tthe character whose ASCII code is NUM (octal).\n"
"    \n"
"    You can explicitly turn off the interpretation of the above characters\n"
"    with the -E option."

#: builtins.c:455
msgid ""
" Output the ARGs.  If -n is specified, the trailing newline is suppressed."
msgstr ""
" Output the ARGs.  If -n is specified, the trailing newline is suppressed."

#: builtins.c:462
msgid ""
" Enable and disable builtin shell commands.  This allows\n"
"    you to use a disk command which has the same name as a shell\n"
"    builtin without specifying a full pathname.  If -n is used, the\n"
"    NAMEs become disabled; otherwise NAMEs are enabled.  For example,\n"
"    to use the `test' found in $PATH instead of the shell builtin\n"
"    version, type `enable -n test'.  On systems supporting dynamic\n"
"    loading, the -f option may be used to load new builtins from the\n"
"    shared object FILENAME.  The -d option will delete a builtin\n"
"    previously loaded with -f.  If no non-option names are given, or\n"
"    the -p option is supplied, a list of builtins is printed.  The\n"
"    -a option means to print every builtin with an indication of whether\n"
"    or not it is enabled.  The -s option restricts the output to the "
"POSIX.2\n"
"    `special' builtins.  The -n option displays a list of all disabled "
"builtins."
msgstr ""
" Enable and disable builtin shell commands.  This allows\n"
"    you to use a disk command which has the same name as a shell\n"
"    builtin without specifying a full pathname.  If -n is used, the\n"
"    NAMEs become disabled; otherwise NAMEs are enabled.  For example,\n"
"    to use the ‚Äò[1mtest[0m‚Äô found in $PATH instead of the shell builtin\n"
"    version, type ‚Äò[1menable -n test[0m‚Äô.  On systems supporting dynamic\n"
"    loading, the -f option may be used to load new builtins from the\n"
"    shared object FILENAME.  The -d option will delete a builtin\n"
"    previously loaded with -f.  If no non-option names are given, or\n"
"    the -p option is supplied, a list of builtins is printed.  The\n"
"    -a option means to print every builtin with an indication of whether\n"
"    or not it is enabled.  The -s option restricts the output to the "
"POSIX.2\n"
"    ‚Äò[1mspecial[0m‚Äô builtins.  The -n option displays a list of all disabled "
"builtins."

#: builtins.c:480
msgid " Read ARGs as input to the shell and execute the resulting command(s)."
msgstr " Read ARGs as input to the shell and execute the resulting command(s)."

#: builtins.c:486
msgid ""
" Getopts is used by shell procedures to parse positional parameters.\n"
"    \n"
"    OPTSTRING contains the option letters to be recognized; if a letter\n"
"    is followed by a colon, the option is expected to have an argument,\n"
"    which should be separated from it by white space.\n"
"    \n"
"    Each time it is invoked, getopts will place the next option in the\n"
"    shell variable $name, initializing name if it does not exist, and\n"
"    the index of the next argument to be processed into the shell\n"
"    variable OPTIND.  OPTIND is initialized to 1 each time the shell or\n"
"    a shell script is invoked.  When an option requires an argument,\n"
"    getopts places that argument into the shell variable OPTARG.\n"
"    \n"
"    getopts reports errors in one of two ways.  If the first character\n"
"    of OPTSTRING is a colon, getopts uses silent error reporting.  In\n"
"    this mode, no error messages are printed.  If an invalid option is\n"
"    seen, getopts places the option character found into OPTARG.  If a\n"
"    required argument is not found, getopts places a ':' into NAME and\n"
"    sets OPTARG to the option character found.  If getopts is not in\n"
"    silent mode, and an invalid option is seen, getopts places '?' into\n"
"    NAME and unsets OPTARG.  If a required argument is not found, a '?'\n"
"    is placed in NAME, OPTARG is unset, and a diagnostic message is\n"
"    printed.\n"
"    \n"
"    If the shell variable OPTERR has the value 0, getopts disables the\n"
"    printing of error messages, even if the first character of\n"
"    OPTSTRING is not a colon.  OPTERR has the value 1 by default.\n"
"    \n"
"    Getopts normally parses the positional parameters ($0 - $9), but if\n"
"    more arguments are given, they are parsed instead."
msgstr ""
" Getopts is used by shell procedures to parse positional parameters.\n"
"    \n"
"    OPTSTRING contains the option letters to be recognized; if a letter\n"
"    is followed by a colon, the option is expected to have an argument,\n"
"    which should be separated from it by white space.\n"
"    \n"
"    Each time it is invoked, getopts will place the next option in the\n"
"    shell variable $name, initializing name if it does not exist, and\n"
"    the index of the next argument to be processed into the shell\n"
"    variable OPTIND.  OPTIND is initialized to 1 each time the shell or\n"
"    a shell script is invoked.  When an option requires an argument,\n"
"    getopts places that argument into the shell variable OPTARG.\n"
"    \n"
"    getopts reports errors in one of two ways.  If the first character\n"
"    of OPTSTRING is a colon, getopts uses silent error reporting.  In\n"
"    this mode, no error messages are printed.  If an invalid option is\n"
"    seen, getopts places the option character found into OPTARG.  If a\n"
"    required argument is not found, getopts places a ‚Äò[1m:[0m‚Äô into NAME "
"and\n"
"    sets OPTARG to the option character found.  If getopts is not in\n"
"    silent mode, and an invalid option is seen, getopts places ‚Äò[1m?[0m‚Äô "
"into\n"
"    NAME and unsets OPTARG.  If a required argument is not found, a ‚Äò[1m?"
"[0m‚Äô\n"
"    is placed in NAME, OPTARG is unset, and a diagnostic message is\n"
"    printed.\n"
"    \n"
"    If the shell variable OPTERR has the value 0, getopts disables the\n"
"    printing of error messages, even if the first character of\n"
"    OPTSTRING is not a colon.  OPTERR has the value 1 by default.\n"
"    \n"
"    Getopts normally parses the positional parameters ($0 - $9), but if\n"
"    more arguments are given, they are parsed instead."

#: builtins.c:521
msgid ""
" Exec FILE, replacing this shell with the specified program.\n"
"    If FILE is not specified, the redirections take effect in this\n"
"    shell.  If the first argument is `-l', then place a dash in the\n"
"    zeroth arg passed to FILE, as login does.  If the `-c' option\n"
"    is supplied, FILE is executed with a null environment.  The `-a'\n"
"    option means to make set argv[0] of the executed process to NAME.\n"
"    If the file cannot be executed and the shell is not interactive,\n"
"    then the shell exits, unless the shell option `execfail' is set."
msgstr ""
" Exec FILE, replacing this shell with the specified program.\n"
"    If FILE is not specified, the redirections take effect in this\n"
"    shell.  If the first argument is ‚Äò[1m-l[0m‚Äô, then place a dash in the\n"
"    zeroth arg passed to FILE, as login does.  If the ‚Äò[1m-c[0m‚Äô option\n"
"    is supplied, FILE is executed with a null environment.  The ‚Äò[1m-a[0m‚Äô\n"
"    option means to make set argv[0] of the executed process to NAME.\n"
"    If the file cannot be executed and the shell is not interactive,\n"
"    then the shell exits, unless the shell option ‚Äò[1mexecfail[0m‚Äô is set."

#: builtins.c:534
msgid ""
" Exit the shell with a status of N.  If N is omitted, the exit status\n"
"    is that of the last command executed."
msgstr ""
" Exit the shell with a status of N.  If N is omitted, the exit status\n"
"    is that of the last command executed."

#: builtins.c:541
msgid " Logout of a login shell."
msgstr " Logout of a login shell."

#: builtins.c:548
msgid ""
" fc is used to list or edit and re-execute commands from the history list.\n"
"    FIRST and LAST can be numbers specifying the range, or FIRST can be a\n"
"    string, which means the most recent command beginning with that\n"
"    string.\n"
"    \n"
"       -e ENAME selects which editor to use.  Default is FCEDIT, then "
"EDITOR,\n"
"          then vi.\n"
"    \n"
"       -l means list lines instead of editing.\n"
"       -n means no line numbers listed.\n"
"       -r means reverse the order of the lines (making it newest listed "
"first).\n"
"    \n"
"    With the `fc -s [pat=rep ...] [command]' format, the command is\n"
"    re-executed after the substitution OLD=NEW is performed.\n"
"    \n"
"    A useful alias to use with this is r='fc -s', so that typing `r cc'\n"
"    runs the last command beginning with `cc' and typing `r' re-executes\n"
"    the last command."
msgstr ""
" fc is used to list or edit and re-execute commands from the history list.\n"
"    FIRST and LAST can be numbers specifying the range, or FIRST can be a\n"
"    string, which means the most recent command beginning with that\n"
"    string.\n"
"    \n"
"       -e ENAME selects which editor to use.  Default is FCEDIT, then "
"EDITOR,\n"
"          then vi.\n"
"    \n"
"       -l means list lines instead of editing.\n"
"       -n means no line numbers listed.\n"
"       -r means reverse the order of the lines (making it newest listed "
"first).\n"
"    \n"
"    With the ‚Äò[1mfc -s [pat=rep ...] [command][0m‚Äô format, the command is\n"
"    re-executed after the substitution OLD=NEW is performed.\n"
"    \n"
"    A useful alias to use with this is r='fc -s', so that typing ‚Äò[1mr cc"
"[0m‚Äô\n"
"    runs the last command beginning with ‚Äò[1mcc[0m‚Äô and typing ‚Äò[1mr[0m‚Äô re-"
"executes\n"
"    the last command."

#: builtins.c:573
msgid ""
" Place JOB_SPEC in the foreground, and make it the current job.  If\n"
"    JOB_SPEC is not present, the shell's notion of the current job is\n"
"    used."
msgstr ""
" Place JOB_SPEC in the foreground, and make it the current job.  If\n"
"    JOB_SPEC is not present, the shell's notion of the current job is\n"
"    used."

#: builtins.c:583
msgid ""
" Place each JOB_SPEC in the background, as if it had been started with\n"
"    `&'.  If JOB_SPEC is not present, the shell's notion of the current\n"
"    job is used."
msgstr ""
" Place each JOB_SPEC in the background, as if it had been started with\n"
"    ‚Äò[1m&[0m‚Äô.  If JOB_SPEC is not present, the shell's notion of the "
"current\n"
"    job is used."

#: builtins.c:592
msgid ""
" For each NAME, the full pathname of the command is determined and\n"
"    remembered.  If the -p option is supplied, PATHNAME is used as the\n"
"    full pathname of NAME, and no path search is performed.  The -r\n"
"    option causes the shell to forget all remembered locations.  The -d\n"
"    option causes the shell to forget the remembered location of each NAME.\n"
"    If the -t option is supplied the full pathname to which each NAME\n"
"    corresponds is printed.  If multiple NAME arguments are supplied with\n"
"    -t, the NAME is printed before the hashed full pathname.  The -l option\n"
"    causes output to be displayed in a format that may be reused as input.\n"
"    If no arguments are given, information about remembered commands is "
"displayed."
msgstr ""
" For each NAME, the full pathname of the command is determined and\n"
"    remembered.  If the -p option is supplied, PATHNAME is used as the\n"
"    full pathname of NAME, and no path search is performed.  The -r\n"
"    option causes the shell to forget all remembered locations.  The -d\n"
"    option causes the shell to forget the remembered location of each NAME.\n"
"    If the -t option is supplied the full pathname to which each NAME\n"
"    corresponds is printed.  If multiple NAME arguments are supplied with\n"
"    -t, the NAME is printed before the hashed full pathname.  The -l option\n"
"    causes output to be displayed in a format that may be reused as input.\n"
"    If no arguments are given, information about remembered commands is "
"displayed."

#: builtins.c:608
msgid ""
" Display helpful information about builtin commands.  If PATTERN is\n"
"    specified, gives detailed help on all commands matching PATTERN,\n"
"    otherwise a list of the builtins is printed.  The -s option\n"
"    restricts the output for each builtin command matching PATTERN to\n"
"    a short usage synopsis."
msgstr ""
" Display helpful information about builtin commands.  If PATTERN is\n"
"    specified, gives detailed help on all commands matching PATTERN,\n"
"    otherwise a list of the builtins is printed.  The -s option\n"
"    restricts the output for each builtin command matching PATTERN to\n"
"    a short usage synopsis."

#: builtins.c:620
msgid ""
" Display the history list with line numbers.  Lines listed with\n"
"    with a `*' have been modified.  Argument of N says to list only\n"
"    the last N lines.  The `-c' option causes the history list to be\n"
"    cleared by deleting all of the entries.  The `-d' option deletes\n"
"    the history entry at offset OFFSET.  The `-w' option writes out the\n"
"    current history to the history file;  `-r' means to read the file and\n"
"    append the contents to the history list instead.  `-a' means\n"
"    to append history lines from this session to the history file.\n"
"    Argument `-n' means to read all history lines not already read\n"
"    from the history file and append them to the history list.\n"
"    \n"
"    If FILENAME is given, then that is used as the history file else\n"
"    if $HISTFILE has a value, that is used, else ~/.bash_history.\n"
"    If the -s option is supplied, the non-option ARGs are appended to\n"
"    the history list as a single entry.  The -p option means to perform\n"
"    history expansion on each ARG and display the result, without storing\n"
"    anything in the history list.\n"
"    \n"
"    If the $HISTTIMEFORMAT variable is set and not null, its value is used\n"
"    as a format string for strftime(3) to print the time stamp associated\n"
"    with each displayed history entry.  No time stamps are printed otherwise."
msgstr ""
" Display the history list with line numbers.  Lines listed with\n"
"    with a ‚Äò[1m*[0m‚Äô have been modified.  Argument of N says to list only\n"
"    the last N lines.  The ‚Äò[1m-c[0m‚Äô option causes the history list to be\n"
"    cleared by deleting all of the entries.  The ‚Äò[1m-d[0m‚Äô option deletes\n"
"    the history entry at offset OFFSET.  The ‚Äò[1m-w[0m‚Äô option writes out "
"the\n"
"    current history to the history file;  ‚Äò[1m-r[0m‚Äô means to read the file "
"and\n"
"    append the contents to the history list instead.  ‚Äò[1m-a[0m‚Äô means\n"
"    to append history lines from this session to the history file.\n"
"    Argument ‚Äò[1m-n[0m‚Äô means to read all history lines not already read\n"
"    from the history file and append them to the history list.\n"
"    \n"
"    If FILENAME is given, then that is used as the history file else\n"
"    if $HISTFILE has a value, that is used, else ~/.bash_history.\n"
"    If the -s option is supplied, the non-option ARGs are appended to\n"
"    the history list as a single entry.  The -p option means to perform\n"
"    history expansion on each ARG and display the result, without storing\n"
"    anything in the history list.\n"
"    \n"
"    If the $HISTTIMEFORMAT variable is set and not null, its value is used\n"
"    as a format string for strftime(3) to print the time stamp associated\n"
"    with each displayed history entry.  No time stamps are printed otherwise."

#: builtins.c:648
msgid ""
" Lists the active jobs.  The -l option lists process id's in addition\n"
"    to the normal information; the -p option lists process id's only.\n"
"    If -n is given, only processes that have changed status since the last\n"
"    notification are printed.  JOBSPEC restricts output to that job.  The\n"
"    -r and -s options restrict output to running and stopped jobs only,\n"
"    respectively.  Without options, the status of all active jobs is\n"
"    printed.  If -x is given, COMMAND is run after all job specifications\n"
"    that appear in ARGS have been replaced with the process ID of that "
"job's\n"
"    process group leader."
msgstr ""
" Lists the active jobs.  The -l option lists process id's in addition\n"
"    to the normal information; the -p option lists process id's only.\n"
"    If -n is given, only processes that have changed status since the last\n"
"    notification are printed.  JOBSPEC restricts output to that job.  The\n"
"    -r and -s options restrict output to running and stopped jobs only,\n"
"    respectively.  Without options, the status of all active jobs is\n"
"    printed.  If -x is given, COMMAND is run after all job specifications\n"
"    that appear in ARGS have been replaced with the process ID of that "
"job's\n"
"    process group leader."

#: builtins.c:664
msgid ""
" By default, removes each JOBSPEC argument from the table of active jobs.\n"
"    If the -h option is given, the job is not removed from the table, but "
"is\n"
"    marked so that SIGHUP is not sent to the job if the shell receives a\n"
"    SIGHUP.  The -a option, when JOBSPEC is not supplied, means to remove "
"all\n"
"    jobs from the job table; the -r option means to remove only running jobs."
msgstr ""
" By default, removes each JOBSPEC argument from the table of active jobs.\n"
"    If the -h option is given, the job is not removed from the table, but "
"is\n"
"    marked so that SIGHUP is not sent to the job if the shell receives a\n"
"    SIGHUP.  The -a option, when JOBSPEC is not supplied, means to remove "
"all\n"
"    jobs from the job table; the -r option means to remove only running jobs."

#: builtins.c:675
msgid ""
" Send the processes named by PID (or JOBSPEC) the signal SIGSPEC.  If\n"
"    SIGSPEC is not present, then SIGTERM is assumed.  An argument of `-l'\n"
"    lists the signal names; if arguments follow `-l' they are assumed to\n"
"    be signal numbers for which names should be listed.  Kill is a shell\n"
"    builtin for two reasons: it allows job IDs to be used instead of\n"
"    process IDs, and, if you have reached the limit on processes that\n"
"    you can create, you don't have to start a process to kill another one."
msgstr ""
" Send the processes named by PID (or JOBSPEC) the signal SIGSPEC.  If\n"
"    SIGSPEC is not present, then SIGTERM is assumed.  An argument of ‚Äò[1m-l"
"[0m‚Äô\n"
"    lists the signal names; if arguments follow ‚Äò[1m-l[0m‚Äô they are assumed "
"to\n"
"    be signal numbers for which names should be listed.  Kill is a shell\n"
"    builtin for two reasons: it allows job IDs to be used instead of\n"
"    process IDs, and, if you have reached the limit on processes that\n"
"    you can create, you don't have to start a process to kill another one."

#: builtins.c:687
msgid ""
" Each ARG is an arithmetic expression to be evaluated.  Evaluation\n"
"    is done in fixed-width integers with no check for overflow, though\n"
"    division by 0 is trapped and flagged as an error.  The following\n"
"    list of operators is grouped into levels of equal-precedence operators.\n"
"    The levels are listed in order of decreasing precedence.\n"
"    \n"
"    \tid++, id--\tvariable post-increment, post-decrement\n"
"    \t++id, --id\tvariable pre-increment, pre-decrement\n"
"    \t-, +\t\tunary minus, plus\n"
"    \t!, ~\t\tlogical and bitwise negation\n"
"    \t**\t\texponentiation\n"
"    \t*, /, %\t\tmultiplication, division, remainder\n"
"    \t+, -\t\taddition, subtraction\n"
"    \t<<, >>\t\tleft and right bitwise shifts\n"
"    \t<=, >=, <, >\tcomparison\n"
"    \t==, !=\t\tequality, inequality\n"
"    \t&\t\tbitwise AND\n"
"    \t^\t\tbitwise XOR\n"
"    \t|\t\tbitwise OR\n"
"    \t&&\t\tlogical AND\n"
"    \t||\t\tlogical OR\n"
"    \texpr ? expr : expr\n"
"    \t\t\tconditional operator\n"
"    \t=, *=, /=, %=,\n"
"    \t+=, -=, <<=, >>=,\n"
"    \t&=, ^=, |=\tassignment\n"
"    \n"
"    Shell variables are allowed as operands.  The name of the variable\n"
"    is replaced by its value (coerced to a fixed-width integer) within\n"
"    an expression.  The variable need not have its integer attribute\n"
"    turned on to be used in an expression.\n"
"    \n"
"    Operators are evaluated in order of precedence.  Sub-expressions in\n"
"    parentheses are evaluated first and may override the precedence\n"
"    rules above.\n"
"    \n"
"    If the last ARG evaluates to 0, let returns 1; 0 is returned\n"
"    otherwise."
msgstr ""
" Each ARG is an arithmetic expression to be evaluated.  Evaluation\n"
"    is done in fixed-width integers with no check for overflow, though\n"
"    division by 0 is trapped and flagged as an error.  The following\n"
"    list of operators is grouped into levels of equal-precedence operators.\n"
"    The levels are listed in order of decreasing precedence.\n"
"    \n"
"    \tid++, id--\tvariable post-increment, post-decrement\n"
"    \t++id, --id\tvariable pre-increment, pre-decrement\n"
"    \t-, +\t\tunary minus, plus\n"
"    \t!, ~\t\tlogical and bitwise negation\n"
"    \t**\t\texponentiation\n"
"    \t*, /, %\t\tmultiplication, division, remainder\n"
"    \t+, -\t\taddition, subtraction\n"
"    \t<<, >>\t\tleft and right bitwise shifts\n"
"    \t<=, >=, <, >\tcomparison\n"
"    \t==, !=\t\tequality, inequality\n"
"    \t&\t\tbitwise AND\n"
"    \t^\t\tbitwise XOR\n"
"    \t|\t\tbitwise OR\n"
"    \t&&\t\tlogical AND\n"
"    \t||\t\tlogical OR\n"
"    \texpr ? expr : expr\n"
"    \t\t\tconditional operator\n"
"    \t=, *=, /=, %=,\n"
"    \t+=, -=, <<=, >>=,\n"
"    \t&=, ^=, |=\tassignment\n"
"    \n"
"    Shell variables are allowed as operands.  The name of the variable\n"
"    is replaced by its value (coerced to a fixed-width integer) within\n"
"    an expression.  The variable need not have its integer attribute\n"
"    turned on to be used in an expression.\n"
"    \n"
"    Operators are evaluated in order of precedence.  Sub-expressions in\n"
"    parentheses are evaluated first and may override the precedence\n"
"    rules above.\n"
"    \n"
"    If the last ARG evaluates to 0, let returns 1; 0 is returned\n"
"    otherwise."

#: builtins.c:730
msgid ""
" One line is read from the standard input, or from file descriptor FD if "
"the\n"
"    -u option is supplied, and the first word is assigned to the first "
"NAME,\n"
"    the second word to the second NAME, and so on, with leftover words "
"assigned\n"
"    to the last NAME.  Only the characters found in $IFS are recognized as "
"word\n"
"    delimiters.  If no NAMEs are supplied, the line read is stored in the "
"REPLY\n"
"    variable.  If the -r option is given, this signifies `raw' input, and\n"
"    backslash escaping is disabled.  The -d option causes read to continue\n"
"    until the first character of DELIM is read, rather than newline.  If the "
"-p\n"
"    option is supplied, the string PROMPT is output without a trailing "
"newline\n"
"    before attempting to read.  If -a is supplied, the words read are "
"assigned\n"
"    to sequential indices of ARRAY, starting at zero.  If -e is supplied "
"and\n"
"    the shell is interactive, readline is used to obtain the line.  If -n "
"is\n"
"    supplied with a non-zero NCHARS argument, read returns after NCHARS\n"
"    characters have been read.  The -s option causes input coming from a\n"
"    terminal to not be echoed.\n"
"    \n"
"    The -t option causes read to time out and return failure if a complete "
"line\n"
"    of input is not read within TIMEOUT seconds.  If the TMOUT variable is "
"set,\n"
"    its value is the default timeout.  The return code is zero, unless end-"
"of-file\n"
"    is encountered, read times out, or an invalid file descriptor is "
"supplied as\n"
"    the argument to -u."
msgstr ""
" One line is read from the standard input, or from file descriptor FD if "
"the\n"
"    -u option is supplied, and the first word is assigned to the first "
"NAME,\n"
"    the second word to the second NAME, and so on, with leftover words "
"assigned\n"
"    to the last NAME.  Only the characters found in $IFS are recognized as "
"word\n"
"    delimiters.  If no NAMEs are supplied, the line read is stored in the "
"REPLY\n"
"    variable.  If the -r option is given, this signifies ‚Äò[1mraw[0m‚Äô input, "
"and\n"
"    backslash escaping is disabled.  The -d option causes read to continue\n"
"    until the first character of DELIM is read, rather than newline.  If the "
"-p\n"
"    option is supplied, the string PROMPT is output without a trailing "
"newline\n"
"    before attempting to read.  If -a is supplied, the words read are "
"assigned\n"
"    to sequential indices of ARRAY, starting at zero.  If -e is supplied "
"and\n"
"    the shell is interactive, readline is used to obtain the line.  If -n "
"is\n"
"    supplied with a non-zero NCHARS argument, read returns after NCHARS\n"
"    characters have been read.  The -s option causes input coming from a\n"
"    terminal to not be echoed.\n"
"    \n"
"    The -t option causes read to time out and return failure if a complete "
"line\n"
"    of input is not read within TIMEOUT seconds.  If the TMOUT variable is "
"set,\n"
"    its value is the default timeout.  The return code is zero, unless end-"
"of-file\n"
"    is encountered, read times out, or an invalid file descriptor is "
"supplied as\n"
"    the argument to -u."

#: builtins.c:756
msgid ""
" Causes a function to exit with the return value specified by N.  If N\n"
"    is omitted, the return status is that of the last command."
msgstr ""
" Causes a function to exit with the return value specified by N.  If N\n"
"    is omitted, the return status is that of the last command."

#: builtins.c:763
msgid ""
"     -a  Mark variables which are modified or created for export.\n"
"        -b  Notify of job termination immediately.\n"
"        -e  Exit immediately if a command exits with a non-zero status.\n"
"        -f  Disable file name generation (globbing).\n"
"        -h  Remember the location of commands as they are looked up.\n"
"        -k  All assignment arguments are placed in the environment for a\n"
"            command, not just those that precede the command name.\n"
"        -m  Job control is enabled.\n"
"        -n  Read commands but do not execute them.\n"
"        -o option-name\n"
"            Set the variable corresponding to option-name:\n"
"                allexport    same as -a\n"
"                braceexpand  same as -B\n"
"                emacs        use an emacs-style line editing interface\n"
"                errexit      same as -e\n"
"                errtrace     same as -E\n"
"                functrace    same as -T\n"
"                hashall      same as -h\n"
"                histexpand   same as -H\n"
"                history      enable command history\n"
"                ignoreeof    the shell will not exit upon reading EOF\n"
"                interactive-comments\n"
"                             allow comments to appear in interactive "
"commands\n"
"                keyword      same as -k\n"
"                monitor      same as -m\n"
"                noclobber    same as -C\n"
"                noexec       same as -n\n"
"                noglob       same as -f\n"
"                nolog        currently accepted but ignored\n"
"                notify       same as -b\n"
"                nounset      same as -u\n"
"                onecmd       same as -t\n"
"                physical     same as -P\n"
"                pipefail     the return value of a pipeline is the status "
"of\n"
"                             the last command to exit with a non-zero "
"status,\n"
"                             or zero if no command exited with a non-zero "
"status\n"
"                posix        change the behavior of bash where the default\n"
"                             operation differs from the 1003.2 standard to\n"
"                             match the standard\n"
"                privileged   same as -p\n"
"                verbose      same as -v\n"
"                vi           use a vi-style line editing interface\n"
"                xtrace       same as -x\n"
"        -p  Turned on whenever the real and effective user ids do not "
"match.\n"
"            Disables processing of the $ENV file and importing of shell\n"
"            functions.  Turning this option off causes the effective uid "
"and\n"
"            gid to be set to the real uid and gid.\n"
"        -t  Exit after reading and executing one command.\n"
"        -u  Treat unset variables as an error when substituting.\n"
"        -v  Print shell input lines as they are read.\n"
"        -x  Print commands and their arguments as they are executed.\n"
"        -B  the shell will perform brace expansion\n"
"        -C  If set, disallow existing regular files to be overwritten\n"
"            by redirection of output.\n"
"        -E  If set, the ERR trap is inherited by shell functions.\n"
"        -H  Enable ! style history substitution.  This flag is on\n"
"            by default when the shell is interactive.\n"
"        -P  If set, do not follow symbolic links when executing commands\n"
"            such as cd which change the current directory.\n"
"        -T  If set, the DEBUG trap is inherited by shell functions.\n"
"        -   Assign any remaining arguments to the positional parameters.\n"
"            The -x and -v options are turned off.\n"
"    \n"
"    Using + rather than - causes these flags to be turned off.  The\n"
"    flags can also be used upon invocation of the shell.  The current\n"
"    set of flags may be found in $-.  The remaining n ARGs are positional\n"
"    parameters and are assigned, in order, to $1, $2, .. $n.  If no\n"
"    ARGs are given, all shell variables are printed."
msgstr ""
"     -a  Mark variables which are modified or created for export.\n"
"        -b  Notify of job termination immediately.\n"
"        -e  Exit immediately if a command exits with a non-zero status.\n"
"        -f  Disable file name generation (globbing).\n"
"        -h  Remember the location of commands as they are looked up.\n"
"        -k  All assignment arguments are placed in the environment for a\n"
"            command, not just those that precede the command name.\n"
"        -m  Job control is enabled.\n"
"        -n  Read commands but do not execute them.\n"
"        -o option-name\n"
"            Set the variable corresponding to option-name:\n"
"                allexport    same as -a\n"
"                braceexpand  same as -B\n"
"                emacs        use an emacs-style line editing interface\n"
"                errexit      same as -e\n"
"                errtrace     same as -E\n"
"                functrace    same as -T\n"
"                hashall      same as -h\n"
"                histexpand   same as -H\n"
"                history      enable command history\n"
"                ignoreeof    the shell will not exit upon reading EOF\n"
"                interactive-comments\n"
"                             allow comments to appear in interactive "
"commands\n"
"                keyword      same as -k\n"
"                monitor      same as -m\n"
"                noclobber    same as -C\n"
"                noexec       same as -n\n"
"                noglob       same as -f\n"
"                nolog        currently accepted but ignored\n"
"                notify       same as -b\n"
"                nounset      same as -u\n"
"                onecmd       same as -t\n"
"                physical     same as -P\n"
"                pipefail     the return value of a pipeline is the status "
"of\n"
"                             the last command to exit with a non-zero "
"status,\n"
"                             or zero if no command exited with a non-zero "
"status\n"
"                posix        change the behavior of bash where the default\n"
"                             operation differs from the 1003.2 standard to\n"
"                             match the standard\n"
"                privileged   same as -p\n"
"                verbose      same as -v\n"
"                vi           use a vi-style line editing interface\n"
"                xtrace       same as -x\n"
"        -p  Turned on whenever the real and effective user ids do not "
"match.\n"
"            Disables processing of the $ENV file and importing of shell\n"
"            functions.  Turning this option off causes the effective uid "
"and\n"
"            gid to be set to the real uid and gid.\n"
"        -t  Exit after reading and executing one command.\n"
"        -u  Treat unset variables as an error when substituting.\n"
"        -v  Print shell input lines as they are read.\n"
"        -x  Print commands and their arguments as they are executed.\n"
"        -B  the shell will perform brace expansion\n"
"        -C  If set, disallow existing regular files to be overwritten\n"
"            by redirection of output.\n"
"        -E  If set, the ERR trap is inherited by shell functions.\n"
"        -H  Enable ! style history substitution.  This flag is on\n"
"            by default when the shell is interactive.\n"
"        -P  If set, do not follow symbolic links when executing commands\n"
"            such as cd which change the current directory.\n"
"        -T  If set, the DEBUG trap is inherited by shell functions.\n"
"        -   Assign any remaining arguments to the positional parameters.\n"
"            The -x and -v options are turned off.\n"
"    \n"
"    Using + rather than - causes these flags to be turned off.  The\n"
"    flags can also be used upon invocation of the shell.  The current\n"
"    set of flags may be found in $-.  The remaining n ARGs are positional\n"
"    parameters and are assigned, in order, to $1, $2, .. $n.  If no\n"
"    ARGs are given, all shell variables are printed."

#: builtins.c:836
msgid ""
" For each NAME, remove the corresponding variable or function.  Given\n"
"    the `-v', unset will only act on variables.  Given the `-f' flag,\n"
"    unset will only act on functions.  With neither flag, unset first\n"
"    tries to unset a variable, and if that fails, then tries to unset a\n"
"    function.  Some variables cannot be unset; also see readonly."
msgstr ""
" For each NAME, remove the corresponding variable or function.  Given\n"
"    the ‚Äò[1m-v[0m‚Äô, unset will only act on variables.  Given the ‚Äò[1m-f[0m‚Äô "
"flag,\n"
"    unset will only act on functions.  With neither flag, unset first\n"
"    tries to unset a variable, and if that fails, then tries to unset a\n"
"    function.  Some variables cannot be unset; also see readonly."

#: builtins.c:846
msgid ""
" NAMEs are marked for automatic export to the environment of\n"
"    subsequently executed commands.  If the -f option is given,\n"
"    the NAMEs refer to functions.  If no NAMEs are given, or if `-p'\n"
"    is given, a list of all names that are exported in this shell is\n"
"    printed.  An argument of `-n' says to remove the export property\n"
"    from subsequent NAMEs.  An argument of `--' disables further option\n"
"    processing."
msgstr ""
" NAMEs are marked for automatic export to the environment of\n"
"    subsequently executed commands.  If the -f option is given,\n"
"    the NAMEs refer to functions.  If no NAMEs are given, or if ‚Äò[1m-p[0m‚Äô\n"
"    is given, a list of all names that are exported in this shell is\n"
"    printed.  An argument of ‚Äò[1m-n[0m‚Äô says to remove the export property\n"
"    from subsequent NAMEs.  An argument of ‚Äò[1m--[0m‚Äô disables further "
"option\n"
"    processing."

#: builtins.c:858
msgid ""
" The given NAMEs are marked readonly and the values of these NAMEs may\n"
"    not be changed by subsequent assignment.  If the -f option is given,\n"
"    then functions corresponding to the NAMEs are so marked.  If no\n"
"    arguments are given, or if `-p' is given, a list of all readonly names\n"
"    is printed.  The `-a' option means to treat each NAME as\n"
"    an array variable.  An argument of `--' disables further option\n"
"    processing."
msgstr ""
" The given NAMEs are marked readonly and the values of these NAMEs may\n"
"    not be changed by subsequent assignment.  If the -f option is given,\n"
"    then functions corresponding to the NAMEs are so marked.  If no\n"
"    arguments are given, or if ‚Äò[1m-p[0m‚Äô is given, a list of all readonly "
"names\n"
"    is printed.  The ‚Äò[1m-a[0m‚Äô option means to treat each NAME as\n"
"    an array variable.  An argument of ‚Äò[1m--[0m‚Äô disables further option\n"
"    processing."

#: builtins.c:870
msgid ""
" The positional parameters from $N+1 ... are renamed to $1 ...  If N is\n"
"    not given, it is assumed to be 1."
msgstr ""
" The positional parameters from $N+1 ... are renamed to $1 ...  If N is\n"
"    not given, it is assumed to be 1."

#: builtins.c:877 builtins.c:886
msgid ""
" Read and execute commands from FILENAME and return.  The pathnames\n"
"    in $PATH are used to find the directory containing FILENAME.  If any\n"
"    ARGUMENTS are supplied, they become the positional parameters when\n"
"    FILENAME is executed."
msgstr ""
" Read and execute commands from FILENAME and return.  The pathnames\n"
"    in $PATH are used to find the directory containing FILENAME.  If any\n"
"    ARGUMENTS are supplied, they become the positional parameters when\n"
"    FILENAME is executed."

#: builtins.c:896
msgid ""
" Suspend the execution of this shell until it receives a SIGCONT\n"
"    signal.  The `-f' if specified says not to complain about this\n"
"    being a login shell if it is; just suspend anyway."
msgstr ""
" Suspend the execution of this shell until it receives a SIGCONT\n"
"    signal.  The ‚Äò[1m-f[0m‚Äô if specified says not to complain about this\n"
"    being a login shell if it is; just suspend anyway."

#: builtins.c:905
msgid ""
" Exits with a status of 0 (true) or 1 (false) depending on\n"
"    the evaluation of EXPR.  Expressions may be unary or binary.  Unary\n"
"    expressions are often used to examine the status of a file.  There\n"
"    are string operators as well, and numeric comparison operators.\n"
"    \n"
"    File operators:\n"
"    \n"
"        -a FILE        True if file exists.\n"
"        -b FILE        True if file is block special.\n"
"        -c FILE        True if file is character special.\n"
"        -d FILE        True if file is a directory.\n"
"        -e FILE        True if file exists.\n"
"        -f FILE        True if file exists and is a regular file.\n"
"        -g FILE        True if file is set-group-id.\n"
"        -h FILE        True if file is a symbolic link.\n"
"        -L FILE        True if file is a symbolic link.\n"
"        -k FILE        True if file has its `sticky' bit set.\n"
"        -p FILE        True if file is a named pipe.\n"
"        -r FILE        True if file is readable by you.\n"
"        -s FILE        True if file exists and is not empty.\n"
"        -S FILE        True if file is a socket.\n"
"        -t FD          True if FD is opened on a terminal.\n"
"        -u FILE        True if the file is set-user-id.\n"
"        -w FILE        True if the file is writable by you.\n"
"        -x FILE        True if the file is executable by you.\n"
"        -O FILE        True if the file is effectively owned by you.\n"
"        -G FILE        True if the file is effectively owned by your group.\n"
"        -N FILE        True if the file has been modified since it was last "
"read.\n"
"    \n"
"      FILE1 -nt FILE2  True if file1 is newer than file2 (according to\n"
"                       modification date).\n"
"    \n"
"      FILE1 -ot FILE2  True if file1 is older than file2.\n"
"    \n"
"      FILE1 -ef FILE2  True if file1 is a hard link to file2.\n"
"    \n"
"    String operators:\n"
"    \n"
"        -z STRING      True if string is empty.\n"
"    \n"
"        -n STRING\n"
"        STRING         True if string is not empty.\n"
"    \n"
"        STRING1 = STRING2\n"
"                       True if the strings are equal.\n"
"        STRING1 != STRING2\n"
"                       True if the strings are not equal.\n"
"        STRING1 < STRING2\n"
"                       True if STRING1 sorts before STRING2 "
"lexicographically.\n"
"        STRING1 > STRING2\n"
"                       True if STRING1 sorts after STRING2 "
"lexicographically.\n"
"    \n"
"    Other operators:\n"
"    \n"
"        -o OPTION      True if the shell option OPTION is enabled.\n"
"        ! EXPR         True if expr is false.\n"
"        EXPR1 -a EXPR2 True if both expr1 AND expr2 are true.\n"
"        EXPR1 -o EXPR2 True if either expr1 OR expr2 is true.\n"
"    \n"
"        arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,\n"
"                       -lt, -le, -gt, or -ge.\n"
"    \n"
"    Arithmetic binary operators return true if ARG1 is equal, not-equal,\n"
"    less-than, less-than-or-equal, greater-than, or greater-than-or-equal\n"
"    than ARG2."
msgstr ""
" Exits with a status of 0 (true) or 1 (false) depending on\n"
"    the evaluation of EXPR.  Expressions may be unary or binary.  Unary\n"
"    expressions are often used to examine the status of a file.  There\n"
"    are string operators as well, and numeric comparison operators.\n"
"    \n"
"    File operators:\n"
"    \n"
"        -a FILE        True if file exists.\n"
"        -b FILE        True if file is block special.\n"
"        -c FILE        True if file is character special.\n"
"        -d FILE        True if file is a directory.\n"
"        -e FILE        True if file exists.\n"
"        -f FILE        True if file exists and is a regular file.\n"
"        -g FILE        True if file is set-group-id.\n"
"        -h FILE        True if file is a symbolic link.\n"
"        -L FILE        True if file is a symbolic link.\n"
"        -k FILE        True if file has its ‚Äò[1msticky[0m‚Äô bit set.\n"
"        -p FILE        True if file is a named pipe.\n"
"        -r FILE        True if file is readable by you.\n"
"        -s FILE        True if file exists and is not empty.\n"
"        -S FILE        True if file is a socket.\n"
"        -t FD          True if FD is opened on a terminal.\n"
"        -u FILE        True if the file is set-user-id.\n"
"        -w FILE        True if the file is writable by you.\n"
"        -x FILE        True if the file is executable by you.\n"
"        -O FILE        True if the file is effectively owned by you.\n"
"        -G FILE        True if the file is effectively owned by your group.\n"
"        -N FILE        True if the file has been modified since it was last "
"read.\n"
"    \n"
"      FILE1 -nt FILE2  True if file1 is newer than file2 (according to\n"
"                       modification date).\n"
"    \n"
"      FILE1 -ot FILE2  True if file1 is older than file2.\n"
"    \n"
"      FILE1 -ef FILE2  True if file1 is a hard link to file2.\n"
"    \n"
"    String operators:\n"
"    \n"
"        -z STRING      True if string is empty.\n"
"    \n"
"        -n STRING\n"
"        STRING         True if string is not empty.\n"
"    \n"
"        STRING1 = STRING2\n"
"                       True if the strings are equal.\n"
"        STRING1 != STRING2\n"
"                       True if the strings are not equal.\n"
"        STRING1 < STRING2\n"
"                       True if STRING1 sorts before STRING2 "
"lexicographically.\n"
"        STRING1 > STRING2\n"
"                       True if STRING1 sorts after STRING2 "
"lexicographically.\n"
"    \n"
"    Other operators:\n"
"    \n"
"        -o OPTION      True if the shell option OPTION is enabled.\n"
"        ! EXPR         True if expr is false.\n"
"        EXPR1 -a EXPR2 True if both expr1 AND expr2 are true.\n"
"        EXPR1 -o EXPR2 True if either expr1 OR expr2 is true.\n"
"    \n"
"        arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,\n"
"                       -lt, -le, -gt, or -ge.\n"
"    \n"
"    Arithmetic binary operators return true if ARG1 is equal, not-equal,\n"
"    less-than, less-than-or-equal, greater-than, or greater-than-or-equal\n"
"    than ARG2."

#: builtins.c:975
msgid ""
" This is a synonym for the \"test\" builtin, but the last\n"
"    argument must be a literal `]', to match the opening `['."
msgstr ""
" This is a synonym for the ‚Äú[1mtest[0m‚Äù builtin, but the last\n"
"    argument must be a literal ‚Äò[1m][0m‚Äô, to match the opening ‚Äò[1m[[0m‚Äô."

#: builtins.c:982
msgid ""
" Print the accumulated user and system times for processes run from\n"
"    the shell."
msgstr ""
" Print the accumulated user and system times for processes run from\n"
"    the shell."

#: builtins.c:989
msgid ""
" The command ARG is to be read and executed when the shell receives\n"
"    signal(s) SIGNAL_SPEC.  If ARG is absent (and a single SIGNAL_SPEC\n"
"    is supplied) or `-', each specified signal is reset to its original\n"
"    value.  If ARG is the null string each SIGNAL_SPEC is ignored by the\n"
"    shell and by the commands it invokes.  If a SIGNAL_SPEC is EXIT (0)\n"
"    the command ARG is executed on exit from the shell.  If a SIGNAL_SPEC\n"
"    is DEBUG, ARG is executed after every simple command.  If the`-p' "
"option\n"
"    is supplied then the trap commands associated with each SIGNAL_SPEC are\n"
"    displayed.  If no arguments are supplied or if only `-p' is given, trap\n"
"    prints the list of commands associated with each signal.  Each "
"SIGNAL_SPEC\n"
"    is either a signal name in <signal.h> or a signal number.  Signal names\n"
"    are case insensitive and the SIG prefix is optional.  `trap -l' prints\n"
"    a list of signal names and their corresponding numbers.  Note that a\n"
"    signal can be sent to the shell with \"kill -signal $$\"."
msgstr ""
" The command ARG is to be read and executed when the shell receives\n"
"    signal(s) SIGNAL_SPEC.  If ARG is absent (and a single SIGNAL_SPEC\n"
"    is supplied) or ‚Äò[1m-[0m‚Äô, each specified signal is reset to its "
"original\n"
"    value.  If ARG is the null string each SIGNAL_SPEC is ignored by the\n"
"    shell and by the commands it invokes.  If a SIGNAL_SPEC is EXIT (0)\n"
"    the command ARG is executed on exit from the shell.  If a SIGNAL_SPEC\n"
"    is DEBUG, ARG is executed after every simple command.  If the‚Äò[1m-p[0m‚Äô "
"option\n"
"    is supplied then the trap commands associated with each SIGNAL_SPEC are\n"
"    displayed.  If no arguments are supplied or if only ‚Äò[1m-p[0m‚Äô is given, "
"trap\n"
"    prints the list of commands associated with each signal.  Each "
"SIGNAL_SPEC\n"
"    is either a signal name in <signal.h> or a signal number.  Signal names\n"
"    are case insensitive and the SIG prefix is optional.  ‚Äò[1mtrap -l[0m‚Äô "
"prints\n"
"    a list of signal names and their corresponding numbers.  Note that a\n"
"    signal can be sent to the shell with ‚Äú[1mkill -signal $$[0m‚Äù."

#: builtins.c:1008
msgid ""
" For each NAME, indicate how it would be interpreted if used as a\n"
"    command name.\n"
"    \n"
"    If the -t option is used, `type' outputs a single word which is one of\n"
"    `alias', `keyword', `function', `builtin', `file' or `', if NAME is an\n"
"    alias, shell reserved word, shell function, shell builtin, disk file,\n"
"    or unfound, respectively.\n"
"    \n"
"    If the -p flag is used, `type' either returns the name of the disk\n"
"    file that would be executed, or nothing if `type -t NAME' would not\n"
"    return `file'.\n"
"    \n"
"    If the -a flag is used, `type' displays all of the places that contain\n"
"    an executable named `file'.  This includes aliases, builtins, and\n"
"    functions, if and only if the -p flag is not also used.\n"
"    \n"
"    The -f flag suppresses shell function lookup.\n"
"    \n"
"    The -P flag forces a PATH search for each NAME, even if it is an alias,\n"
"    builtin, or function, and returns the name of the disk file that would\n"
"    be executed."
msgstr ""
" For each NAME, indicate how it would be interpreted if used as a\n"
"    command name.\n"
"    \n"
"    If the -t option is used, ‚Äò[1mtype[0m‚Äô outputs a single word which is "
"one of\n"
"    ‚Äò[1malias[0m‚Äô, ‚Äò[1mkeyword[0m‚Äô, ‚Äò[1mfunction[0m‚Äô, ‚Äò[1mbuiltin[0m‚Äô, "
"‚Äò[1mfile[0m‚Äô or ‚Äò[1m[0m‚Äô, if NAME is an\n"
"    alias, shell reserved word, shell function, shell builtin, disk file,\n"
"    or unfound, respectively.\n"
"    \n"
"    If the -p flag is used, ‚Äò[1mtype[0m‚Äô either returns the name of the "
"disk\n"
"    file that would be executed, or nothing if ‚Äò[1mtype -t NAME[0m‚Äô would "
"not\n"
"    return ‚Äò[1mfile[0m‚Äô.\n"
"    \n"
"    If the -a flag is used, ‚Äò[1mtype[0m‚Äô displays all of the places that "
"contain\n"
"    an executable named ‚Äò[1mfile[0m‚Äô.  This includes aliases, builtins, and\n"
"    functions, if and only if the -p flag is not also used.\n"
"    \n"
"    The -f flag suppresses shell function lookup.\n"
"    \n"
"    The -P flag forces a PATH search for each NAME, even if it is an alias,\n"
"    builtin, or function, and returns the name of the disk file that would\n"
"    be executed."

#: builtins.c:1035
msgid ""
" Ulimit provides control over the resources available to processes\n"
"    started by the shell, on systems that allow such control.  If an\n"
"    option is given, it is interpreted as follows:\n"
"    \n"
"        -S\tuse the `soft' resource limit\n"
"        -H\tuse the `hard' resource limit\n"
"        -a\tall current limits are reported\n"
"        -c\tthe maximum size of core files created\n"
"        -d\tthe maximum size of a process's data segment\n"
"        -f\tthe maximum size of files created by the shell\n"
"        -i  the maximum number of pending signals\n"
"        -l\tthe maximum size a process may lock into memory\n"
"        -m\tthe maximum resident set size\n"
"        -n\tthe maximum number of open file descriptors\n"
"        -p\tthe pipe buffer size\n"
"        -q  the maximum number of bytes in POSIX message queues\n"
"        -s\tthe maximum stack size\n"
"        -t\tthe maximum amount of cpu time in seconds\n"
"        -u\tthe maximum number of user processes\n"
"        -v\tthe size of virtual memory\n"
"        -x  the maximum number of file locks\n"
"    \n"
"    If LIMIT is given, it is the new value of the specified resource;\n"
"    the special LIMIT values `soft', `hard', and `unlimited' stand for\n"
"    the current soft limit, the current hard limit, and no limit, "
"respectively.\n"
"    Otherwise, the current value of the specified resource is printed.\n"
"    If no option is given, then -f is assumed.  Values are in 1024-byte\n"
"    increments, except for -t, which is in seconds, -p, which is in\n"
"    increments of 512 bytes, and -u, which is an unscaled number of\n"
"    processes."
msgstr ""
" Ulimit provides control over the resources available to processes\n"
"    started by the shell, on systems that allow such control.  If an\n"
"    option is given, it is interpreted as follows:\n"
"    \n"
"        -S\tuse the ‚Äò[1msoft[0m‚Äô resource limit\n"
"        -H\tuse the ‚Äò[1mhard[0m‚Äô resource limit\n"
"        -a\tall current limits are reported\n"
"        -c\tthe maximum size of core files created\n"
"        -d\tthe maximum size of a process's data segment\n"
"        -f\tthe maximum size of files created by the shell\n"
"        -i  the maximum number of pending signals\n"
"        -l\tthe maximum size a process may lock into memory\n"
"        -m\tthe maximum resident set size\n"
"        -n\tthe maximum number of open file descriptors\n"
"        -p\tthe pipe buffer size\n"
"        -q  the maximum number of bytes in POSIX message queues\n"
"        -s\tthe maximum stack size\n"
"        -t\tthe maximum amount of cpu time in seconds\n"
"        -u\tthe maximum number of user processes\n"
"        -v\tthe size of virtual memory\n"
"        -x  the maximum number of file locks\n"
"    \n"
"    If LIMIT is given, it is the new value of the specified resource;\n"
"    the special LIMIT values ‚Äò[1msoft[0m‚Äô, ‚Äò[1mhard[0m‚Äô, and ‚Äò[1munlimited"
"[0m‚Äô stand for\n"
"    the current soft limit, the current hard limit, and no limit, "
"respectively.\n"
"    Otherwise, the current value of the specified resource is printed.\n"
"    If no option is given, then -f is assumed.  Values are in 1024-byte\n"
"    increments, except for -t, which is in seconds, -p, which is in\n"
"    increments of 512 bytes, and -u, which is an unscaled number of\n"
"    processes."

#: builtins.c:1071
msgid ""
" The user file-creation mask is set to MODE.  If MODE is omitted, or if\n"
"    `-S' is supplied, the current value of the mask is printed.  The `-S'\n"
"    option makes the output symbolic; otherwise an octal number is output.\n"
"    If `-p' is supplied, and MODE is omitted, the output is in a form\n"
"    that may be used as input.  If MODE begins with a digit, it is\n"
"    interpreted as an octal number, otherwise it is a symbolic mode string\n"
"    like that accepted by chmod(1)."
msgstr ""
" The user file-creation mask is set to MODE.  If MODE is omitted, or if\n"
"    ‚Äò[1m-S[0m‚Äô is supplied, the current value of the mask is printed.  The "
"‚Äò[1m-S[0m‚Äô\n"
"    option makes the output symbolic; otherwise an octal number is output.\n"
"    If ‚Äò[1m-p[0m‚Äô is supplied, and MODE is omitted, the output is in a form\n"
"    that may be used as input.  If MODE begins with a digit, it is\n"
"    interpreted as an octal number, otherwise it is a symbolic mode string\n"
"    like that accepted by chmod(1)."

#: builtins.c:1084
msgid ""
" Wait for the specified process and report its termination status.  If\n"
"    N is not given, all currently active child processes are waited for,\n"
"    and the return code is zero.  N may be a process ID or a job\n"
"    specification; if a job spec is given, all processes in the job's\n"
"    pipeline are waited for."
msgstr ""
" Wait for the specified process and report its termination status.  If\n"
"    N is not given, all currently active child processes are waited for,\n"
"    and the return code is zero.  N may be a process ID or a job\n"
"    specification; if a job spec is given, all processes in the job's\n"
"    pipeline are waited for."

#: builtins.c:1096
msgid ""
" Wait for the specified process and report its termination status.  If\n"
"    N is not given, all currently active child processes are waited for,\n"
"    and the return code is zero.  N is a process ID; if it is not given,\n"
"    all child processes of the shell are waited for."
msgstr ""
" Wait for the specified process and report its termination status.  If\n"
"    N is not given, all currently active child processes are waited for,\n"
"    and the return code is zero.  N is a process ID; if it is not given,\n"
"    all child processes of the shell are waited for."

#: builtins.c:1106
msgid ""
" The `for' loop executes a sequence of commands for each member in a\n"
"    list of items.  If `in WORDS ...;' is not present, then `in \"$@\"' is\n"
"    assumed.  For each element in WORDS, NAME is set to that element, and\n"
"    the COMMANDS are executed."
msgstr ""
" The ‚Äò[1mfor[0m‚Äô loop executes a sequence of commands for each member in a\n"
"    list of items.  If ‚Äò[1min WORDS ...;[0m‚Äô is not present, then ‚Äò[1min ‚Äú[1m"
"$@[0m‚Äù[0m‚Äô is\n"
"    assumed.  For each element in WORDS, NAME is set to that element, and\n"
"    the COMMANDS are executed."

#: builtins.c:1115
msgid ""
" Equivalent to\n"
"    \t(( EXP1 ))\n"
"    \twhile (( EXP2 )); do\n"
"    \t\tCOMMANDS\n"
"    \t\t(( EXP3 ))\n"
"    \tdone\n"
"    EXP1, EXP2, and EXP3 are arithmetic expressions.  If any expression is\n"
"    omitted, it behaves as if it evaluates to 1."
msgstr ""
" Equivalent to\n"
"    \t(( EXP1 ))\n"
"    \twhile (( EXP2 )); do\n"
"    \t\tCOMMANDS\n"
"    \t\t(( EXP3 ))\n"
"    \tdone\n"
"    EXP1, EXP2, and EXP3 are arithmetic expressions.  If any expression is\n"
"    omitted, it behaves as if it evaluates to 1."

#: builtins.c:1128
msgid ""
" The WORDS are expanded, generating a list of words.  The\n"
"    set of expanded words is printed on the standard error, each\n"
"    preceded by a number.  If `in WORDS' is not present, `in \"$@\"'\n"
"    is assumed.  The PS3 prompt is then displayed and a line read\n"
"    from the standard input.  If the line consists of the number\n"
"    corresponding to one of the displayed words, then NAME is set\n"
"    to that word.  If the line is empty, WORDS and the prompt are\n"
"    redisplayed.  If EOF is read, the command completes.  Any other\n"
"    value read causes NAME to be set to null.  The line read is saved\n"
"    in the variable REPLY.  COMMANDS are executed after each selection\n"
"    until a break command is executed."
msgstr ""
" The WORDS are expanded, generating a list of words.  The\n"
"    set of expanded words is printed on the standard error, each\n"
"    preceded by a number.  If ‚Äò[1min WORDS[0m‚Äô is not present, ‚Äò[1min ‚Äú[1m$@"
"[0m‚Äù[0m‚Äô\n"
"    is assumed.  The PS3 prompt is then displayed and a line read\n"
"    from the standard input.  If the line consists of the number\n"
"    corresponding to one of the displayed words, then NAME is set\n"
"    to that word.  If the line is empty, WORDS and the prompt are\n"
"    redisplayed.  If EOF is read, the command completes.  Any other\n"
"    value read causes NAME to be set to null.  The line read is saved\n"
"    in the variable REPLY.  COMMANDS are executed after each selection\n"
"    until a break command is executed."

#: builtins.c:1144
msgid ""
" Execute PIPELINE and print a summary of the real time, user CPU time,\n"
"    and system CPU time spent executing PIPELINE when it terminates.\n"
"    The return status is the return status of PIPELINE.  The `-p' option\n"
"    prints the timing summary in a slightly different format.  This uses\n"
"    the value of the TIMEFORMAT variable as the output format."
msgstr ""
" Execute PIPELINE and print a summary of the real time, user CPU time,\n"
"    and system CPU time spent executing PIPELINE when it terminates.\n"
"    The return status is the return status of PIPELINE.  The ‚Äò[1m-p[0m‚Äô "
"option\n"
"    prints the timing summary in a slightly different format.  This uses\n"
"    the value of the TIMEFORMAT variable as the output format."

#: builtins.c:1154
msgid ""
" Selectively execute COMMANDS based upon WORD matching PATTERN.  The\n"
"    `|' is used to separate multiple patterns."
msgstr ""
" Selectively execute COMMANDS based upon WORD matching PATTERN.  The\n"
"    ‚Äò[1m|[0m‚Äô is used to separate multiple patterns."

#: builtins.c:1161
msgid ""
" The `if COMMANDS' list is executed.  If its exit status is zero, then the\n"
"    `then COMMANDS' list is executed.  Otherwise, each `elif COMMANDS' list "
"is\n"
"    executed in turn, and if its exit status is zero, the corresponding\n"
"    `then COMMANDS' list is executed and the if command completes.  "
"Otherwise,\n"
"    the `else COMMANDS' list is executed, if present.  The exit status of "
"the\n"
"    entire construct is the exit status of the last command executed, or "
"zero\n"
"    if no condition tested true."
msgstr ""
" The ‚Äò[1mif COMMANDS[0m‚Äô list is executed.  If its exit status is zero, then "
"the\n"
"    ‚Äò[1mthen COMMANDS[0m‚Äô list is executed.  Otherwise, each ‚Äò[1melif "
"COMMANDS[0m‚Äô list is\n"
"    executed in turn, and if its exit status is zero, the corresponding\n"
"    ‚Äò[1mthen COMMANDS[0m‚Äô list is executed and the if command completes.  "
"Otherwise,\n"
"    the ‚Äò[1melse COMMANDS[0m‚Äô list is executed, if present.  The exit status "
"of the\n"
"    entire construct is the exit status of the last command executed, or "
"zero\n"
"    if no condition tested true."

#: builtins.c:1173
msgid ""
" Expand and execute COMMANDS as long as the final command in the\n"
"    `while' COMMANDS has an exit status of zero."
msgstr ""
" Expand and execute COMMANDS as long as the final command in the\n"
"    ‚Äò[1mwhile[0m‚Äô COMMANDS has an exit status of zero."

#: builtins.c:1180
msgid ""
" Expand and execute COMMANDS as long as the final command in the\n"
"    `until' COMMANDS has an exit status which is not zero."
msgstr ""
" Expand and execute COMMANDS as long as the final command in the\n"
"    ‚Äò[1muntil[0m‚Äô COMMANDS has an exit status which is not zero."

#: builtins.c:1187
msgid ""
" Create a simple command invoked by NAME which runs COMMANDS.\n"
"    Arguments on the command line along with NAME are passed to the\n"
"    function as $0 .. $n."
msgstr ""
" Create a simple command invoked by NAME which runs COMMANDS.\n"
"    Arguments on the command line along with NAME are passed to the\n"
"    function as $0 .. $n."

#: builtins.c:1195
msgid ""
" Run a set of commands in a group.  This is one way to redirect an\n"
"    entire set of commands."
msgstr ""
" Run a set of commands in a group.  This is one way to redirect an\n"
"    entire set of commands."

#: builtins.c:1202
msgid ""
" Equivalent to the JOB_SPEC argument to the `fg' command.  Resume a\n"
"    stopped or background job.  JOB_SPEC can specify either a job name\n"
"    or a job number.  Following JOB_SPEC with a `&' places the job in\n"
"    the background, as if the job specification had been supplied as an\n"
"    argument to `bg'."
msgstr ""
" Equivalent to the JOB_SPEC argument to the ‚Äò[1mfg[0m‚Äô command.  Resume a\n"
"    stopped or background job.  JOB_SPEC can specify either a job name\n"
"    or a job number.  Following JOB_SPEC with a ‚Äò[1m&[0m‚Äô places the job in\n"
"    the background, as if the job specification had been supplied as an\n"
"    argument to ‚Äò[1mbg[0m‚Äô."

#: builtins.c:1212
msgid ""
" The EXPRESSION is evaluated according to the rules for arithmetic\n"
"    evaluation.  Equivalent to \"let EXPRESSION\"."
msgstr ""
" The EXPRESSION is evaluated according to the rules for arithmetic\n"
"    evaluation.  Equivalent to ‚Äú[1mlet EXPRESSION[0m‚Äù."

#: builtins.c:1219
msgid ""
" Returns a status of 0 or 1 depending on the evaluation of the conditional\n"
"    expression EXPRESSION.  Expressions are composed of the same primaries "
"used\n"
"    by the `test' builtin, and may be combined using the following "
"operators\n"
"    \n"
"    \t( EXPRESSION )\tReturns the value of EXPRESSION\n"
"    \t! EXPRESSION\tTrue if EXPRESSION is false; else false\n"
"    \tEXPR1 && EXPR2\tTrue if both EXPR1 and EXPR2 are true; else false\n"
"    \tEXPR1 || EXPR2\tTrue if either EXPR1 or EXPR2 is true; else false\n"
"    \n"
"    When the `==' and `!=' operators are used, the string to the right of "
"the\n"
"    operator is used as a pattern and pattern matching is performed.  The\n"
"    && and || operators do not evaluate EXPR2 if EXPR1 is sufficient to\n"
"    determine the expression's value."
msgstr ""
" Returns a status of 0 or 1 depending on the evaluation of the conditional\n"
"    expression EXPRESSION.  Expressions are composed of the same primaries "
"used\n"
"    by the ‚Äò[1mtest[0m‚Äô builtin, and may be combined using the following "
"operators\n"
"    \n"
"    \t( EXPRESSION )\tReturns the value of EXPRESSION\n"
"    \t! EXPRESSION\tTrue if EXPRESSION is false; else false\n"
"    \tEXPR1 && EXPR2\tTrue if both EXPR1 and EXPR2 are true; else false\n"
"    \tEXPR1 || EXPR2\tTrue if either EXPR1 or EXPR2 is true; else false\n"
"    \n"
"    When the ‚Äò[1m==[0m‚Äô and ‚Äò[1m!=[0m‚Äô operators are used, the string to the "
"right of the\n"
"    operator is used as a pattern and pattern matching is performed.  The\n"
"    && and || operators do not evaluate EXPR2 if EXPR1 is sufficient to\n"
"    determine the expression's value."

#: builtins.c:1237
msgid ""
" BASH_VERSION    Version information for this Bash.\n"
"    CDPATH          A colon-separated list of directories to search\n"
"    \t\tfor directries given as arguments to `cd'.\n"
"    GLOBIGNORE\tA colon-separated list of patterns describing filenames to\n"
"    \t\tbe ignored by pathname expansion.\n"
"    HISTFILE        The name of the file where your command history is "
"stored.\n"
"    HISTFILESIZE    The maximum number of lines this file can contain.\n"
"    HISTSIZE        The maximum number of history lines that a running\n"
"    \t\tshell can access.\n"
"    HOME            The complete pathname to your login directory.\n"
"    HOSTNAME\tThe name of the current host.\n"
"    HOSTTYPE        The type of CPU this version of Bash is running under.\n"
"    IGNOREEOF       Controls the action of the shell on receipt of an EOF\n"
"    \t\tcharacter as the sole input.  If set, then the value\n"
"    \t\tof it is the number of EOF characters that can be seen\n"
"    \t\tin a row on an empty line before the shell will exit\n"
"    \t\t(default 10).  When unset, EOF signifies the end of input.\n"
"    MACHTYPE\tA string describing the current system Bash is running on.\n"
"    MAILCHECK\tHow often, in seconds, Bash checks for new mail.\n"
"    MAILPATH\tA colon-separated list of filenames which Bash checks\n"
"    \t\tfor new mail.\n"
"    OSTYPE\t\tThe version of Unix this version of Bash is running on.\n"
"    PATH            A colon-separated list of directories to search when\n"
"    \t\tlooking for commands.\n"
"    PROMPT_COMMAND  A command to be executed before the printing of each\n"
"    \t\tprimary prompt.\n"
"    PS1             The primary prompt string.\n"
"    PS2             The secondary prompt string.\n"
"    PWD\t\tThe full pathname of the current directory.\n"
"    SHELLOPTS\tA colon-separated list of enabled shell options.\n"
"    TERM            The name of the current terminal type.\n"
"    TIMEFORMAT\tThe output format for timing statistics displayed by the\n"
"    \t\t`time' reserved word.\n"
"    auto_resume     Non-null means a command word appearing on a line by\n"
"    \t\titself is first looked for in the list of currently\n"
"    \t\tstopped jobs.  If found there, that job is foregrounded.\n"
"    \t\tA value of `exact' means that the command word must\n"
"    \t\texactly match a command in the list of stopped jobs.  A\n"
"    \t\tvalue of `substring' means that the command word must\n"
"    \t\tmatch a substring of the job.  Any other value means that\n"
"    \t\tthe command must be a prefix of a stopped job.\n"
"    histchars       Characters controlling history expansion and quick\n"
"    \t\tsubstitution.  The first character is the history\n"
"    \t\tsubstitution character, usually `!'.  The second is\n"
"    \t\tthe `quick substitution' character, usually `^'.  The\n"
"    \t\tthird is the `history comment' character, usually `#'.\n"
"    HISTIGNORE\tA colon-separated list of patterns used to decide which\n"
"    \t\tcommands should be saved on the history list.\n"
msgstr ""
" BASH_VERSION    Version information for this Bash.\n"
"    CDPATH          A colon-separated list of directories to search\n"
"    \t\tfor directries given as arguments to ‚Äò[1mcd[0m‚Äô.\n"
"    GLOBIGNORE\tA colon-separated list of patterns describing filenames to\n"
"    \t\tbe ignored by pathname expansion.\n"
"    HISTFILE        The name of the file where your command history is "
"stored.\n"
"    HISTFILESIZE    The maximum number of lines this file can contain.\n"
"    HISTSIZE        The maximum number of history lines that a running\n"
"    \t\tshell can access.\n"
"    HOME            The complete pathname to your login directory.\n"
"    HOSTNAME\tThe name of the current host.\n"
"    HOSTTYPE        The type of CPU this version of Bash is running under.\n"
"    IGNOREEOF       Controls the action of the shell on receipt of an EOF\n"
"    \t\tcharacter as the sole input.  If set, then the value\n"
"    \t\tof it is the number of EOF characters that can be seen\n"
"    \t\tin a row on an empty line before the shell will exit\n"
"    \t\t(default 10).  When unset, EOF signifies the end of input.\n"
"    MACHTYPE\tA string describing the current system Bash is running on.\n"
"    MAILCHECK\tHow often, in seconds, Bash checks for new mail.\n"
"    MAILPATH\tA colon-separated list of filenames which Bash checks\n"
"    \t\tfor new mail.\n"
"    OSTYPE\t\tThe version of Unix this version of Bash is running on.\n"
"    PATH            A colon-separated list of directories to search when\n"
"    \t\tlooking for commands.\n"
"    PROMPT_COMMAND  A command to be executed before the printing of each\n"
"    \t\tprimary prompt.\n"
"    PS1             The primary prompt string.\n"
"    PS2             The secondary prompt string.\n"
"    PWD\t\tThe full pathname of the current directory.\n"
"    SHELLOPTS\tA colon-separated list of enabled shell options.\n"
"    TERM            The name of the current terminal type.\n"
"    TIMEFORMAT\tThe output format for timing statistics displayed by the\n"
"    \t\t‚Äò[1mtime[0m‚Äô reserved word.\n"
"    auto_resume     Non-null means a command word appearing on a line by\n"
"    \t\titself is first looked for in the list of currently\n"
"    \t\tstopped jobs.  If found there, that job is foregrounded.\n"
"    \t\tA value of ‚Äò[1mexact[0m‚Äô means that the command word must\n"
"    \t\texactly match a command in the list of stopped jobs.  A\n"
"    \t\tvalue of ‚Äò[1msubstring[0m‚Äô means that the command word must\n"
"    \t\tmatch a substring of the job.  Any other value means that\n"
"    \t\tthe command must be a prefix of a stopped job.\n"
"    histchars       Characters controlling history expansion and quick\n"
"    \t\tsubstitution.  The first character is the history\n"
"    \t\tsubstitution character, usually ‚Äò[1m![0m‚Äô.  The second is\n"
"    \t\tthe ‚Äò[1mquick substitution[0m‚Äô character, usually ‚Äò[1m^[0m‚Äô.  The\n"
"    \t\tthird is the ‚Äò[1mhistory comment[0m‚Äô character, usually ‚Äò[1m#[0m‚Äô.\n"
"    HISTIGNORE\tA colon-separated list of patterns used to decide which\n"
"    \t\tcommands should be saved on the history list.\n"

#: builtins.c:1292
msgid ""
" Adds a directory to the top of the directory stack, or rotates\n"
"    the stack, making the new top of the stack the current working\n"
"    directory.  With no arguments, exchanges the top two directories.\n"
"    \n"
"    +N\tRotates the stack so that the Nth directory (counting\n"
"    \tfrom the left of the list shown by `dirs', starting with\n"
"    \tzero) is at the top.\n"
"    \n"
"    -N\tRotates the stack so that the Nth directory (counting\n"
"    \tfrom the right of the list shown by `dirs', starting with\n"
"    \tzero) is at the top.\n"
"    \n"
"    -n\tsuppress the normal change of directory when adding directories\n"
"    \tto the stack, so only the stack is manipulated.\n"
"    \n"
"    dir\tadds DIR to the directory stack at the top, making it the\n"
"    \tnew current working directory.\n"
"    \n"
"    You can see the directory stack with the `dirs' command."
msgstr ""
" Adds a directory to the top of the directory stack, or rotates\n"
"    the stack, making the new top of the stack the current working\n"
"    directory.  With no arguments, exchanges the top two directories.\n"
"    \n"
"    +N\tRotates the stack so that the Nth directory (counting\n"
"    \tfrom the left of the list shown by ‚Äò[1mdirs[0m‚Äô, starting with\n"
"    \tzero) is at the top.\n"
"    \n"
"    -N\tRotates the stack so that the Nth directory (counting\n"
"    \tfrom the right of the list shown by ‚Äò[1mdirs[0m‚Äô, starting with\n"
"    \tzero) is at the top.\n"
"    \n"
"    -n\tsuppress the normal change of directory when adding directories\n"
"    \tto the stack, so only the stack is manipulated.\n"
"    \n"
"    dir\tadds DIR to the directory stack at the top, making it the\n"
"    \tnew current working directory.\n"
"    \n"
"    You can see the directory stack with the ‚Äò[1mdirs[0m‚Äô command."

#: builtins.c:1318
msgid ""
" Removes entries from the directory stack.  With no arguments,\n"
"    removes the top directory from the stack, and cd's to the new\n"
"    top directory.\n"
"    \n"
"    +N\tremoves the Nth entry counting from the left of the list\n"
"    \tshown by `dirs', starting with zero.  For example: `popd +0'\n"
"    \tremoves the first directory, `popd +1' the second.\n"
"    \n"
"    -N\tremoves the Nth entry counting from the right of the list\n"
"    \tshown by `dirs', starting with zero.  For example: `popd -0'\n"
"    \tremoves the last directory, `popd -1' the next to last.\n"
"    \n"
"    -n\tsuppress the normal change of directory when removing directories\n"
"    \tfrom the stack, so only the stack is manipulated.\n"
"    \n"
"    You can see the directory stack with the `dirs' command."
msgstr ""
" Removes entries from the directory stack.  With no arguments,\n"
"    removes the top directory from the stack, and cd's to the new\n"
"    top directory.\n"
"    \n"
"    +N\tremoves the Nth entry counting from the left of the list\n"
"    \tshown by ‚Äò[1mdirs[0m‚Äô, starting with zero.  For example: ‚Äò[1mpopd +0"
"[0m‚Äô\n"
"    \tremoves the first directory, ‚Äò[1mpopd +1[0m‚Äô the second.\n"
"    \n"
"    -N\tremoves the Nth entry counting from the right of the list\n"
"    \tshown by ‚Äò[1mdirs[0m‚Äô, starting with zero.  For example: ‚Äò[1mpopd -0"
"[0m‚Äô\n"
"    \tremoves the last directory, ‚Äò[1mpopd -1[0m‚Äô the next to last.\n"
"    \n"
"    -n\tsuppress the normal change of directory when removing directories\n"
"    \tfrom the stack, so only the stack is manipulated.\n"
"    \n"
"    You can see the directory stack with the ‚Äò[1mdirs[0m‚Äô command."

#: builtins.c:1341
msgid ""
" Display the list of currently remembered directories.  Directories\n"
"    find their way onto the list with the `pushd' command; you can get\n"
"    back up through the list with the `popd' command.\n"
"    \n"
"    The -l flag specifies that `dirs' should not print shorthand versions\n"
"    of directories which are relative to your home directory.  This means\n"
"    that `~/bin' might be displayed as `/homes/bfox/bin'.  The -v flag\n"
"    causes `dirs' to print the directory stack with one entry per line,\n"
"    prepending the directory name with its position in the stack.  The -p\n"
"    flag does the same thing, but the stack position is not prepended.\n"
"    The -c flag clears the directory stack by deleting all of the elements.\n"
"    \n"
"    +N\tdisplays the Nth entry counting from the left of the list shown by\n"
"    \tdirs when invoked without options, starting with zero.\n"
"    \n"
"    -N\tdisplays the Nth entry counting from the right of the list shown by\n"
"    \tdirs when invoked without options, starting with zero."
msgstr ""
" Display the list of currently remembered directories.  Directories\n"
"    find their way onto the list with the ‚Äò[1mpushd[0m‚Äô command; you can "
"get\n"
"    back up through the list with the ‚Äò[1mpopd[0m‚Äô command.\n"
"    \n"
"    The -l flag specifies that ‚Äò[1mdirs[0m‚Äô should not print shorthand "
"versions\n"
"    of directories which are relative to your home directory.  This means\n"
"    that ‚Äò[1m~/bin[0m‚Äô might be displayed as ‚Äò[1m/homes/bfox/bin[0m‚Äô.  The -"
"v flag\n"
"    causes ‚Äò[1mdirs[0m‚Äô to print the directory stack with one entry per "
"line,\n"
"    prepending the directory name with its position in the stack.  The -p\n"
"    flag does the same thing, but the stack position is not prepended.\n"
"    The -c flag clears the directory stack by deleting all of the elements.\n"
"    \n"
"    +N\tdisplays the Nth entry counting from the left of the list shown by\n"
"    \tdirs when invoked without options, starting with zero.\n"
"    \n"
"    -N\tdisplays the Nth entry counting from the right of the list shown by\n"
"    \tdirs when invoked without options, starting with zero."

#: builtins.c:1364
msgid ""
" Toggle the values of variables controlling optional behavior.\n"
"    The -s flag means to enable (set) each OPTNAME; the -u flag\n"
"    unsets each OPTNAME.  The -q flag suppresses output; the exit\n"
"    status indicates whether each OPTNAME is set or unset.  The -o\n"
"    option restricts the OPTNAMEs to those defined for use with\n"
"    `set -o'.  With no options, or with the -p option, a list of all\n"
"    settable options is displayed, with an indication of whether or\n"
"    not each is set."
msgstr ""
" Toggle the values of variables controlling optional behavior.\n"
"    The -s flag means to enable (set) each OPTNAME; the -u flag\n"
"    unsets each OPTNAME.  The -q flag suppresses output; the exit\n"
"    status indicates whether each OPTNAME is set or unset.  The -o\n"
"    option restricts the OPTNAMEs to those defined for use with\n"
"    ‚Äò[1mset -o[0m‚Äô.  With no options, or with the -p option, a list of all\n"
"    settable options is displayed, with an indication of whether or\n"
"    not each is set."

#: builtins.c:1377
msgid ""
" printf formats and prints ARGUMENTS under control of the FORMAT. FORMAT\n"
"    is a character string which contains three types of objects: plain\n"
"    characters, which are simply copied to standard output, character "
"escape\n"
"    sequences which are converted and copied to the standard output, and\n"
"    format specifications, each of which causes printing of the next "
"successive\n"
"    argument.  In addition to the standard printf(1) formats, %b means to\n"
"    expand backslash escape sequences in the corresponding argument, and %q\n"
"    means to quote the argument in a way that can be reused as shell input.\n"
"    If the -v option is supplied, the output is placed into the value of "
"the\n"
"    shell variable VAR rather than being sent to the standard output."
msgstr ""
" printf formats and prints ARGUMENTS under control of the FORMAT. FORMAT\n"
"    is a character string which contains three types of objects: plain\n"
"    characters, which are simply copied to standard output, character "
"escape\n"
"    sequences which are converted and copied to the standard output, and\n"
"    format specifications, each of which causes printing of the next "
"successive\n"
"    argument.  In addition to the standard printf(1) formats, %b means to\n"
"    expand backslash escape sequences in the corresponding argument, and %q\n"
"    means to quote the argument in a way that can be reused as shell input.\n"
"    If the -v option is supplied, the output is placed into the value of "
"the\n"
"    shell variable VAR rather than being sent to the standard output."

#: builtins.c:1393
msgid ""
" For each NAME, specify how arguments are to be completed.\n"
"    If the -p option is supplied, or if no options are supplied, existing\n"
"    completion specifications are printed in a way that allows them to be\n"
"    reused as input.  The -r option removes a completion specification for\n"
"    each NAME, or, if no NAMEs are supplied, all completion specifications."
msgstr ""
" For each NAME, specify how arguments are to be completed.\n"
"    If the -p option is supplied, or if no options are supplied, existing\n"
"    completion specifications are printed in a way that allows them to be\n"
"    reused as input.  The -r option removes a completion specification for\n"
"    each NAME, or, if no NAMEs are supplied, all completion specifications."

#: builtins.c:1405
msgid ""
" Display the possible completions depending on the options.  Intended\n"
"    to be used from within a shell function generating possible "
"completions.\n"
"    If the optional WORD argument is supplied, matches against WORD are\n"
"    generated."
msgstr ""
" Display the possible completions depending on the options.  Intended\n"
"    to be used from within a shell function generating possible "
"completions.\n"
"    If the optional WORD argument is supplied, matches against WORD are\n"
"    generated."
