#
#  Chet Ramey <chet.ramey@case.edu>
#
#  Copyright 1995 Chester Ramey
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2, or (at your option)
#   any later version.
#
#   TThis program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software Foundation,
#   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Generate a sequence from m to n, m defaults to 1.

seq ()
{
	declare -i lo hi i	# makes local
	local _SEQ

	case $# in
	1) seq 1 "$1" ; return $? ;;
	2) lo=$1 hi=$2
	   i=$lo _SEQ=""
	   while let "i <= hi"; do
		_SEQ="${_SEQ}$i "
		let i+=1
	   done
	   echo "${_SEQ# }"
	   return 0 ;;
	*) echo seq: usage: seq [low] high 1>&2 ; return 2 ;;
	esac
}

# like the APL `iota' function (or at least how I remember it :-)
iota()
{
	case $# in
	1) seq 1 "$1"; return $?;;
	*) echo "iota: usage: iota high" 1>&2; return 2;;
	esac
}
